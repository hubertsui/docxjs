{"version":3,"file":"docx-preview-hs.min.js","mappings":"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","sources":["webpack://docx/webpack/universalModuleDefinition","webpack://docx/./src/common/open-xml-package.ts","webpack://docx/./src/common/part.ts","webpack://docx/./src/common/relationship.ts","webpack://docx/./src/document-parser.ts","webpack://docx/./src/document-props/core-props-part.ts","webpack://docx/./src/document-props/core-props.ts","webpack://docx/./src/document-props/custom-props-part.ts","webpack://docx/./src/document-props/custom-props.ts","webpack://docx/./src/document-props/extended-props-part.ts","webpack://docx/./src/document-props/extended-props.ts","webpack://docx/./src/document/bookmarks.ts","webpack://docx/./src/document/border.ts","webpack://docx/./src/document/common.ts","webpack://docx/./src/document/document-part.ts","webpack://docx/./src/document/dom.ts","webpack://docx/./src/document/line-spacing.ts","webpack://docx/./src/document/paragraph.ts","webpack://docx/./src/document/run.ts","webpack://docx/./src/document/section.ts","webpack://docx/./src/docx-preview.ts","webpack://docx/./src/font-table/font-table.ts","webpack://docx/./src/font-table/fonts.ts","webpack://docx/./src/header-footer/elements.ts","webpack://docx/./src/header-footer/parts.ts","webpack://docx/./src/html-renderer.ts","webpack://docx/./src/javascript.ts","webpack://docx/./src/notes/elements.ts","webpack://docx/./src/notes/parts.ts","webpack://docx/./src/numbering/numbering-part.ts","webpack://docx/./src/numbering/numbering.ts","webpack://docx/./src/parser/xml-parser.ts","webpack://docx/./src/settings/settings-part.ts","webpack://docx/./src/settings/settings.ts","webpack://docx/./src/styles/styles-part.ts","webpack://docx/./src/theme/theme-part.ts","webpack://docx/./src/theme/theme.ts","webpack://docx/./src/utils.ts","webpack://docx/./src/word-document.ts","webpack://docx/external umd {\"root\":\"JSZip\",\"commonjs\":\"jszip\",\"commonjs2\":\"jszip\",\"amd\":\"jszip\"}","webpack://docx/webpack/bootstrap","webpack://docx/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jszip\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jszip\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"docx\"] = factory(require(\"jszip\"));\n\telse\n\t\troot[\"docx\"] = factory(root[\"JSZip\"]);\n})(globalThis, (__WEBPACK_EXTERNAL_MODULE__626__) => {\nreturn ","import * as JSZip from \"jszip\";\nimport { parseXmlString, XmlParser } from \"../parser/xml-parser\";\nimport { splitPath } from \"../utils\";\nimport { parseRelationships, Relationship } from \"./relationship\";\n\nexport interface OpenXmlPackageOptions {\n    trimXmlDeclaration: boolean,\n    keepOrigin: boolean,\n}\n\nexport class OpenXmlPackage {\n    xmlParser: XmlParser = new XmlParser();\n\n    constructor(private _zip: JSZip, public options: OpenXmlPackageOptions) {\n    }\n\n    get(path: string): any {\n        return this._zip.files[normalizePath(path)];\n    }\n\n    update(path: string, content: any) {\n        this._zip.file(path, content);\n    }\n\n    static load(input: Blob | any, options: OpenXmlPackageOptions): Promise<OpenXmlPackage> {\n        return JSZip.loadAsync(input).then(zip => new OpenXmlPackage(zip, options));\n    }\n\n    save(type: any = \"blob\"): Promise<any>  {\n        return this._zip.generateAsync({ type });\n    }\n\n    load(path: string, type: JSZip.OutputType = \"string\"): Promise<any> {\n        return this.get(path)?.async(type) ?? Promise.resolve(null);\n    }\n\n    loadRelationships(path: string = null): Promise<Relationship[]> {\n        let relsPath = `_rels/.rels`;\n\n        if (path != null) {\n            const [f, fn] = splitPath(path);\n            relsPath = `${f}_rels/${fn}.rels`;\n        }\n\n        return this.load(relsPath)\n            .then(txt => txt ? parseRelationships(this.parseXmlDocument(txt).firstElementChild, this.xmlParser) : null);\n    }\n\n    /** @internal */\n    parseXmlDocument(txt: string): Document {\n        return parseXmlString(txt, this.options.trimXmlDeclaration);\n    }\n}\n\nfunction normalizePath(path: string) {\n    return path.startsWith('/') ? path.substr(1) : path;\n}","import { serializeXmlString } from \"../parser/xml-parser\";\nimport { OpenXmlPackage } from \"./open-xml-package\";\nimport { Relationship } from \"./relationship\";\n\nexport class Part {\n    protected _xmlDocument: Document;\n\n    rels: Relationship[];\n\n    constructor(protected _package: OpenXmlPackage, public path: string) {\n    }\n\n    load(): Promise<any> {\n        return Promise.all([\n            this._package.loadRelationships(this.path).then(rels => {\n                this.rels = rels;\n            }),\n            this._package.load(this.path).then(text => {\n                const xmlDoc = this._package.parseXmlDocument(text);\n\n                if (this._package.options.keepOrigin) {\n                    this._xmlDocument = xmlDoc;\n                }\n\n                this.parseXml(xmlDoc.firstElementChild);\n            })\n        ]);\n    }\n\n    save() {\n        this._package.update(this.path, serializeXmlString(this._xmlDocument));\n    }\n\n    protected parseXml(root: Element) {\n    }\n}","import { XmlParser } from \"../parser/xml-parser\";\n\nexport interface Relationship {\n    id: string,\n    type: RelationshipTypes | string,\n    target: string\n    targetMode: \"\" | \"External\" | string \n}\n\nexport enum RelationshipTypes {\n    OfficeDocument = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\",\n    FontTable = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/fontTable\",\n    Image = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\",\n    Numbering = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/numbering\",\n    Styles = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\",\n    StylesWithEffects = \"http://schemas.microsoft.com/office/2007/relationships/stylesWithEffects\",\n    Theme = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme\",\n    Settings = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/settings\",\n    WebSettings = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/webSettings\",\n    Hyperlink = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink\",\n    Footnotes = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/footnotes\",\n\tEndnotes = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/endnotes\",\n    Footer = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/footer\",\n    Header = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/header\",\n    ExtendedProperties = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties\",\n    CoreProperties = \"http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties\",\n\tCustomProperties = \"http://schemas.openxmlformats.org/package/2006/relationships/metadata/custom-properties\",\n}\n\nexport function parseRelationships(root: Element, xml: XmlParser): Relationship[] {\n    return xml.elements(root).map(e => <Relationship>{\n        id: xml.attr(e, \"Id\"),\n        type: xml.attr(e, \"Type\"),\n        target: xml.attr(e, \"Target\"),\n        targetMode: xml.attr(e, \"TargetMode\")\n    });\n}","import {\n\tDomType,\n\tWmlTable,\n\tIDomNumbering,\n\tWmlHyperlink,\n\tIDomImage,\n\tOpenXmlElement,\n\tWmlTableColumn,\n\tWmlTableCell,\n\tWmlTableRow,\n\tNumberingPicBullet,\n\tWmlText,\n\tWmlSymbol,\n\tWmlBreak,\n\tWmlNoteReference,\n} from \"./document/dom\";\nimport { DocumentElement } from \"./document/document\";\nimport {\n\tWmlParagraph,\n\tparseParagraphProperties,\n\tparseParagraphProperty,\n} from \"./document/paragraph\";\nimport { parseSectionProperties } from \"./document/section\";\nimport xml from \"./parser/xml-parser\";\nimport { parseRunProperties, WmlRun } from \"./document/run\";\nimport { parseBookmarkEnd, parseBookmarkStart } from \"./document/bookmarks\";\nimport { IDomStyle, IDomSubStyle } from \"./document/style\";\nimport {\n\tWmlFieldChar,\n\tWmlFieldSimple,\n\tWmlInstructionText,\n} from \"./document/fields\";\nimport { convertLength, LengthUsage, LengthUsageType } from \"./document/common\";\nimport { VmlShape } from \"./document/vector\";\n\nexport var autos = {\n\tshd: \"inherit\",\n\tcolor: \"black\",\n\tborderColor: \"black\",\n\thighlight: \"transparent\",\n};\n\nexport interface DocumentParserOptions {\n\tignoreWidth: boolean;\n\tdebug: boolean;\n}\n\nexport class DocumentParser {\n\toptions: DocumentParserOptions;\n\n\tconstructor(options?: Partial<DocumentParserOptions>) {\n\t\tthis.options = {\n\t\t\tignoreWidth: false,\n\t\t\tdebug: false,\n\t\t\t...options,\n\t\t};\n\t}\n\n\tparseNotes(xmlDoc: Element, elemName: string, elemClass: any): any[] {\n\t\tvar result = [];\n\n\t\tfor (let el of xml.elements(xmlDoc, elemName)) {\n\t\t\tconst node = new elemClass();\n\t\t\tnode.id = xml.attr(el, \"id\");\n\t\t\tnode.noteType = xml.attr(el, \"type\");\n\t\t\tnode.children = this.parseBodyElements(el);\n\t\t\tresult.push(node);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tparseDocumentFile(xmlDoc: Element): DocumentElement {\n\t\tvar xbody = xml.element(xmlDoc, \"body\");\n\t\tvar background = xml.element(xmlDoc, \"background\");\n\t\tvar sectPr = xml.element(xbody, \"sectPr\");\n\n\t\treturn {\n\t\t\ttype: DomType.Document,\n\t\t\tchildren: this.parseBodyElements(xbody),\n\t\t\tprops: sectPr ? parseSectionProperties(sectPr, xml) : null,\n\t\t\tcssStyle: background ? this.parseBackground(background) : {},\n\t\t};\n\t}\n\n\tparseBackground(elem: Element): any {\n\t\tvar result = {};\n\t\tvar color = xmlUtil.colorAttr(elem, \"color\");\n\n\t\tif (color) {\n\t\t\tresult[\"background-color\"] = color;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tparseBodyElements(element: Element): OpenXmlElement[] {\n\t\tvar children = [];\n\n\t\txmlUtil.foreach(element, (elem) => {\n\t\t\tswitch (elem.localName) {\n\t\t\t\tcase \"p\":\n\t\t\t\t\tchildren.push(this.parseParagraph(elem));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tbl\":\n\t\t\t\t\tchildren.push(this.parseTable(elem));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"sdt\":\n\t\t\t\t\tthis.parseSdt(elem).forEach((el) => children.push(el));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\treturn children;\n\t}\n\n\tparseStylesFile(xstyles: Element): IDomStyle[] {\n\t\tvar result = [];\n\n\t\txmlUtil.foreach(xstyles, (n) => {\n\t\t\tswitch (n.localName) {\n\t\t\t\tcase \"style\":\n\t\t\t\t\tresult.push(this.parseStyle(n));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"docDefaults\":\n\t\t\t\t\tresult.push(this.parseDefaultStyles(n));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tparseDefaultStyles(node: Element): IDomStyle {\n\t\tvar result = <IDomStyle>{\n\t\t\tid: null,\n\t\t\tname: null,\n\t\t\ttarget: null,\n\t\t\tbasedOn: null,\n\t\t\tstyles: [],\n\t\t};\n\n\t\txmlUtil.foreach(node, (c) => {\n\t\t\tswitch (c.localName) {\n\t\t\t\tcase \"rPrDefault\":\n\t\t\t\t\tvar rPr = xml.element(c, \"rPr\");\n\n\t\t\t\t\tif (rPr)\n\t\t\t\t\t\tresult.styles.push({\n\t\t\t\t\t\t\ttarget: \"span\",\n\t\t\t\t\t\t\tvalues: this.parseDefaultProperties(rPr, {}),\n\t\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"pPrDefault\":\n\t\t\t\t\tvar pPr = xml.element(c, \"pPr\");\n\n\t\t\t\t\tif (pPr)\n\t\t\t\t\t\tresult.styles.push({\n\t\t\t\t\t\t\ttarget: \"p\",\n\t\t\t\t\t\t\tvalues: this.parseDefaultProperties(pPr, {}),\n\t\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tparseStyle(node: Element): IDomStyle {\n\t\tvar result = <IDomStyle>{\n\t\t\tid: xml.attr(node, \"styleId\"),\n\t\t\tisDefault: xml.boolAttr(node, \"default\"),\n\t\t\tname: null,\n\t\t\ttarget: null,\n\t\t\tbasedOn: null,\n\t\t\tstyles: [],\n\t\t\tlinked: null,\n\t\t};\n\n\t\tswitch (xml.attr(node, \"type\")) {\n\t\t\tcase \"paragraph\":\n\t\t\t\tresult.target = \"p\";\n\t\t\t\tbreak;\n\t\t\tcase \"table\":\n\t\t\t\tresult.target = \"table\";\n\t\t\t\tbreak;\n\t\t\tcase \"character\":\n\t\t\t\tresult.target = \"span\";\n\t\t\t\tbreak;\n\t\t\t//case \"numbering\": result.target = \"p\"; break;\n\t\t}\n\n\t\txmlUtil.foreach(node, (n) => {\n\t\t\tswitch (n.localName) {\n\t\t\t\tcase \"basedOn\":\n\t\t\t\t\tresult.basedOn = xml.attr(n, \"val\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"name\":\n\t\t\t\t\tresult.name = xml.attr(n, \"val\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"link\":\n\t\t\t\t\tresult.linked = xml.attr(n, \"val\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"next\":\n\t\t\t\t\tresult.next = xml.attr(n, \"val\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"aliases\":\n\t\t\t\t\tresult.aliases = xml.attr(n, \"val\").split(\",\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"pPr\":\n\t\t\t\t\tresult.styles.push({\n\t\t\t\t\t\ttarget: \"p\",\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {}),\n\t\t\t\t\t});\n\t\t\t\t\tresult.paragraphProps = parseParagraphProperties(n, xml);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"rPr\":\n\t\t\t\t\tresult.styles.push({\n\t\t\t\t\t\ttarget: \"span\",\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {}),\n\t\t\t\t\t});\n\t\t\t\t\tresult.runProps = parseRunProperties(n, xml);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tblPr\":\n\t\t\t\tcase \"tcPr\":\n\t\t\t\t\tresult.styles.push({\n\t\t\t\t\t\ttarget: \"td\", //TODO: maybe move to processor\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {}),\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tblStylePr\":\n\t\t\t\t\tfor (let s of this.parseTableStyle(n))\n\t\t\t\t\t\tresult.styles.push(s);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"rsid\":\n\t\t\t\tcase \"qFormat\":\n\t\t\t\tcase \"hidden\":\n\t\t\t\tcase \"semiHidden\":\n\t\t\t\tcase \"unhideWhenUsed\":\n\t\t\t\tcase \"autoRedefine\":\n\t\t\t\tcase \"uiPriority\":\n\t\t\t\t\t//TODO: ignore\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis.options.debug &&\n\t\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\t`DOCX: Unknown style element: ${n.localName}`\n\t\t\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tparseTableStyle(node: Element): IDomSubStyle[] {\n\t\tvar result = [];\n\n\t\tvar type = xml.attr(node, \"type\");\n\t\tvar selector = \"\";\n\t\tvar modificator = \"\";\n\n\t\tswitch (type) {\n\t\t\tcase \"firstRow\":\n\t\t\t\tmodificator = \".first-row\";\n\t\t\t\tselector = \"tr.first-row td\";\n\t\t\t\tbreak;\n\t\t\tcase \"lastRow\":\n\t\t\t\tmodificator = \".last-row\";\n\t\t\t\tselector = \"tr.last-row td\";\n\t\t\t\tbreak;\n\t\t\tcase \"firstCol\":\n\t\t\t\tmodificator = \".first-col\";\n\t\t\t\tselector = \"td.first-col\";\n\t\t\t\tbreak;\n\t\t\tcase \"lastCol\":\n\t\t\t\tmodificator = \".last-col\";\n\t\t\t\tselector = \"td.last-col\";\n\t\t\t\tbreak;\n\t\t\tcase \"band1Vert\":\n\t\t\t\tmodificator = \":not(.no-vband)\";\n\t\t\t\tselector = \"td.odd-col\";\n\t\t\t\tbreak;\n\t\t\tcase \"band2Vert\":\n\t\t\t\tmodificator = \":not(.no-vband)\";\n\t\t\t\tselector = \"td.even-col\";\n\t\t\t\tbreak;\n\t\t\tcase \"band1Horz\":\n\t\t\t\tmodificator = \":not(.no-hband)\";\n\t\t\t\tselector = \"tr.odd-row\";\n\t\t\t\tbreak;\n\t\t\tcase \"band2Horz\":\n\t\t\t\tmodificator = \":not(.no-hband)\";\n\t\t\t\tselector = \"tr.even-row\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn [];\n\t\t}\n\n\t\txmlUtil.foreach(node, (n) => {\n\t\t\tswitch (n.localName) {\n\t\t\t\tcase \"pPr\":\n\t\t\t\t\tresult.push({\n\t\t\t\t\t\ttarget: `${selector} p`,\n\t\t\t\t\t\tmod: modificator,\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {}),\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"rPr\":\n\t\t\t\t\tresult.push({\n\t\t\t\t\t\ttarget: `${selector} span`,\n\t\t\t\t\t\tmod: modificator,\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {}),\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tblPr\":\n\t\t\t\tcase \"tcPr\":\n\t\t\t\t\tresult.push({\n\t\t\t\t\t\ttarget: selector, //TODO: maybe move to processor\n\t\t\t\t\t\tmod: modificator,\n\t\t\t\t\t\tvalues: this.parseDefaultProperties(n, {}),\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tparseNumberingFile(xnums: Element): IDomNumbering[] {\n\t\tvar result = [];\n\t\tvar mapping = {};\n\t\tvar bullets = [];\n\n\t\txmlUtil.foreach(xnums, (n) => {\n\t\t\tswitch (n.localName) {\n\t\t\t\tcase \"abstractNum\":\n\t\t\t\t\tthis.parseAbstractNumbering(n, bullets).forEach((x) =>\n\t\t\t\t\t\tresult.push(x)\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"numPicBullet\":\n\t\t\t\t\tbullets.push(this.parseNumberingPicBullet(n));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"num\":\n\t\t\t\t\tvar numId = xml.attr(n, \"numId\");\n\t\t\t\t\tvar abstractNumId = xml.elementAttr(\n\t\t\t\t\t\tn,\n\t\t\t\t\t\t\"abstractNumId\",\n\t\t\t\t\t\t\"val\"\n\t\t\t\t\t);\n\t\t\t\t\tmapping[abstractNumId] = numId;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\tresult.forEach((x) => (x.id = mapping[x.id]));\n\n\t\treturn result;\n\t}\n\n\tparseNumberingPicBullet(elem: Element): NumberingPicBullet {\n\t\tvar pict = xml.element(elem, \"pict\");\n\t\tvar shape = pict && xml.element(pict, \"shape\");\n\t\tvar imagedata = shape && xml.element(shape, \"imagedata\");\n\n\t\treturn imagedata\n\t\t\t? {\n\t\t\t\t\tid: xml.intAttr(elem, \"numPicBulletId\"),\n\t\t\t\t\tsrc: xml.attr(imagedata, \"id\"),\n\t\t\t\t\tstyle: xml.attr(shape, \"style\"),\n\t\t\t  }\n\t\t\t: null;\n\t}\n\n\tparseAbstractNumbering(node: Element, bullets: any[]): IDomNumbering[] {\n\t\tvar result = [];\n\t\tvar id = xml.attr(node, \"abstractNumId\");\n\n\t\txmlUtil.foreach(node, (n) => {\n\t\t\tswitch (n.localName) {\n\t\t\t\tcase \"lvl\":\n\t\t\t\t\tresult.push(this.parseNumberingLevel(id, n, bullets));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tparseNumberingLevel(\n\t\tid: string,\n\t\tnode: Element,\n\t\tbullets: any[]\n\t): IDomNumbering {\n\t\tvar result: IDomNumbering = {\n\t\t\tid: id,\n\t\t\tlevel: xml.intAttr(node, \"ilvl\"),\n\t\t\tpStyleName: undefined,\n\t\t\tpStyle: {},\n\t\t\trStyle: {},\n\t\t\tsuff: \"tab\",\n\t\t};\n\n\t\txmlUtil.foreach(node, (n) => {\n\t\t\tswitch (n.localName) {\n\t\t\t\tcase \"pPr\":\n\t\t\t\t\tthis.parseDefaultProperties(n, result.pStyle);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"rPr\":\n\t\t\t\t\tthis.parseDefaultProperties(n, result.rStyle);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"lvlPicBulletId\":\n\t\t\t\t\tvar id = xml.intAttr(n, \"val\");\n\t\t\t\t\tresult.bullet = bullets.find((x) => x.id == id);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"lvlText\":\n\t\t\t\t\tresult.levelText = xml.attr(n, \"val\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"pStyle\":\n\t\t\t\t\tresult.pStyleName = xml.attr(n, \"val\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"numFmt\":\n\t\t\t\t\tresult.format = xml.attr(n, \"val\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"suff\":\n\t\t\t\t\tresult.suff = xml.attr(n, \"val\");\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tparseSdt(node: Element): OpenXmlElement[] {\n\t\tconst sdtContent = xml.element(node, \"sdtContent\");\n\t\treturn sdtContent ? this.parseBodyElements(sdtContent) : [];\n\t}\n\n\tparseParagraph(node: Element): OpenXmlElement {\n\t\tvar result = <WmlParagraph>{ type: DomType.Paragraph, children: [] };\n\n\t\txmlUtil.foreach(node, (c) => {\n\t\t\tswitch (c.localName) {\n\t\t\t\tcase \"r\":\n\t\t\t\t\tresult.children.push(this.parseRun(c, result));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"hyperlink\":\n\t\t\t\t\tresult.children.push(this.parseHyperlink(c, result));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"bookmarkStart\":\n\t\t\t\t\tresult.children.push(parseBookmarkStart(c, xml));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"bookmarkEnd\":\n\t\t\t\t\tresult.children.push(parseBookmarkEnd(c, xml));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"oMath\":\n\t\t\t\t\tresult.children.push(this.parseMath(c));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"pPr\":\n\t\t\t\t\tthis.parseParagraphProperties(c, result);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tparseParagraphProperties(elem: Element, paragraph: WmlParagraph) {\n\t\tthis.parseDefaultProperties(\n\t\t\telem,\n\t\t\t(paragraph.cssStyle = {}),\n\t\t\tnull,\n\t\t\t(c) => {\n\t\t\t\tif (parseParagraphProperty(c, paragraph, xml)) return true;\n\n\t\t\t\tswitch (c.localName) {\n\t\t\t\t\tcase \"pStyle\":\n\t\t\t\t\t\tparagraph.styleName = xml.attr(c, \"val\");\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"cnfStyle\":\n\t\t\t\t\t\tparagraph.className = values.classNameOfCnfStyle(c);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"framePr\":\n\t\t\t\t\t\tthis.parseFrame(c, paragraph);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"rPr\":\n\t\t\t\t\t\t//TODO ignore\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t}\n\n\tparseFrame(node: Element, paragraph: WmlParagraph) {\n\t\tvar dropCap = xml.attr(node, \"dropCap\");\n\n\t\tif (dropCap == \"drop\") paragraph.cssStyle[\"float\"] = \"left\";\n\t}\n\n\tparseHyperlink(node: Element, parent?: OpenXmlElement): WmlHyperlink {\n\t\tvar result: WmlHyperlink = <WmlHyperlink>{\n\t\t\ttype: DomType.Hyperlink,\n\t\t\tparent: parent,\n\t\t\tchildren: [],\n\t\t};\n\t\tvar anchor = xml.attr(node, \"anchor\");\n\t\tvar relId = xml.attr(node, \"id\");\n\n\t\tif (anchor) result.href = \"#\" + anchor;\n\n\t\tif (relId) result.id = relId;\n\n\t\txmlUtil.foreach(node, (c) => {\n\t\t\tswitch (c.localName) {\n\t\t\t\tcase \"r\":\n\t\t\t\t\tresult.children.push(this.parseRun(c, result));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tparseRun(node: Element, parent?: OpenXmlElement): WmlRun {\n\t\tvar result: WmlRun = <WmlRun>{\n\t\t\ttype: DomType.Run,\n\t\t\tparent: parent,\n\t\t\tchildren: [],\n\t\t};\n\n\t\txmlUtil.foreach(node, (c) => {\n\t\t\tswitch (c.localName) {\n\t\t\t\tcase \"t\":\n\t\t\t\t\tresult.children.push(<WmlText>{\n\t\t\t\t\t\ttype: DomType.Text,\n\t\t\t\t\t\ttext: c.textContent,\n\t\t\t\t\t}); //.replace(\" \", \"\\u00A0\"); // TODO\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"fldSimple\":\n\t\t\t\t\tresult.children.push(<WmlFieldSimple>{\n\t\t\t\t\t\ttype: DomType.SimpleField,\n\t\t\t\t\t\tinstruction: xml.attr(c, \"instr\"),\n\t\t\t\t\t\tlock: xml.boolAttr(c, \"lock\", false),\n\t\t\t\t\t\tdirty: xml.boolAttr(c, \"dirty\", false),\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"instrText\":\n\t\t\t\t\tresult.fieldRun = true;\n\t\t\t\t\tresult.children.push(<WmlInstructionText>{\n\t\t\t\t\t\ttype: DomType.Instruction,\n\t\t\t\t\t\ttext: c.textContent,\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"fldChar\":\n\t\t\t\t\tresult.fieldRun = true;\n\t\t\t\t\tresult.children.push(<WmlFieldChar>{\n\t\t\t\t\t\ttype: DomType.ComplexField,\n\t\t\t\t\t\tcharType: xml.attr(c, \"fldCharType\"),\n\t\t\t\t\t\tlock: xml.boolAttr(c, \"lock\", false),\n\t\t\t\t\t\tdirty: xml.boolAttr(c, \"dirty\", false),\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"noBreakHyphen\":\n\t\t\t\t\tresult.children.push({ type: DomType.NoBreakHyphen });\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"br\":\n\t\t\t\t\tresult.children.push(<WmlBreak>{\n\t\t\t\t\t\ttype: DomType.Break,\n\t\t\t\t\t\tbreak: xml.attr(c, \"type\") || \"textWrapping\",\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"lastRenderedPageBreak\":\n\t\t\t\t\tresult.children.push(<WmlBreak>{\n\t\t\t\t\t\ttype: DomType.Break,\n\t\t\t\t\t\tbreak: \"lastRenderedPageBreak\",\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"sym\":\n\t\t\t\t\tresult.children.push(<WmlSymbol>{\n\t\t\t\t\t\ttype: DomType.Symbol,\n\t\t\t\t\t\tfont: xml.attr(c, \"font\"),\n\t\t\t\t\t\tchar: xml.attr(c, \"char\"),\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tab\":\n\t\t\t\t\tresult.children.push({ type: DomType.Tab });\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"footnoteReference\":\n\t\t\t\t\tresult.children.push(<WmlNoteReference>{\n\t\t\t\t\t\ttype: DomType.FootnoteReference,\n\t\t\t\t\t\tid: xml.attr(c, \"id\"),\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"endnoteReference\":\n\t\t\t\t\tresult.children.push(<WmlNoteReference>{\n\t\t\t\t\t\ttype: DomType.EndnoteReference,\n\t\t\t\t\t\tid: xml.attr(c, \"id\"),\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"drawing\":\n\t\t\t\t\tlet d = this.parseDrawing(c);\n\n\t\t\t\t\tif (d) result.children = [d];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"pict\":\n\t\t\t\t\tresult.children.push(this.parseVmlPicture(c));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"rPr\":\n\t\t\t\t\tthis.parseRunProperties(c, result);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tparseMath(elem: Element): OpenXmlElement {\n\t\treturn this.parseMathElement(elem, DomType.MmlMath);\n\t}\n\n\tparseMathElement(elem: Element, type: DomType): OpenXmlElement {\n\t\tconst result = { type, children: [] } as OpenXmlElement;\n\n\t\tfor (const el of xml.elements(elem)) {\n\t\t\tswitch (el.localName) {\n\t\t\t\tcase \"r\":\n\t\t\t\t\tresult.children.push(this.parseRun(el));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"f\":\n\t\t\t\t\tresult.children.push(\n\t\t\t\t\t\tthis.parseMathElement(el, DomType.MmlFraction)\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"num\":\n\t\t\t\t\tresult.children.push(\n\t\t\t\t\t\tthis.parseMathElement(el, DomType.MmlNumerator)\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"den\":\n\t\t\t\t\tresult.children.push(\n\t\t\t\t\t\tthis.parseMathElement(el, DomType.MmlDenominator)\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tparseRunProperties(elem: Element, run: WmlRun) {\n\t\tconsole.log(\"parse run properties\", elem, run);\n\t\tthis.parseDefaultProperties(elem, (run.cssStyle = {}), null, (c) => {\n\t\t\tswitch (c.localName) {\n\t\t\t\tcase \"rStyle\":\n\t\t\t\t\trun.styleName = xml.attr(c, \"val\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"vertAlign\":\n\t\t\t\t\trun.verticalAlign = values.valueOfVertAlign(c, true);\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\tparseVmlPicture(elem: Element): OpenXmlElement {\n\t\tconst result = { type: DomType.VmlPicture, children: [] };\n\n\t\tfor (const el of xml.elements(elem)) {\n\t\t\tswitch (el.localName) {\n\t\t\t\tcase \"shape\":\n\t\t\t\t\tresult.children.push(this.parseVmlShape(el));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tparseVmlShape(elem: Element): OpenXmlElement {\n\t\tconst result = <VmlShape>{ type: DomType.VmlShape, children: [] };\n\n\t\tresult.cssStyleText = xml.attr(elem, \"style\");\n\n\t\tfor (const el of xml.elements(elem)) {\n\t\t\tswitch (el.localName) {\n\t\t\t\tcase \"imagedata\":\n\t\t\t\t\tresult.imagedata = {\n\t\t\t\t\t\tid: xml.attr(el, \"id\"),\n\t\t\t\t\t\ttitle: xml.attr(el, \"title\"),\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tparseDrawing(node: Element): OpenXmlElement {\n\t\tfor (var n of xml.elements(node)) {\n\t\t\tswitch (n.localName) {\n\t\t\t\tcase \"inline\":\n\t\t\t\tcase \"anchor\":\n\t\t\t\t\treturn this.parseDrawingWrapper(n);\n\t\t\t}\n\t\t}\n\t}\n\n\tparseDrawingWrapper(node: Element): OpenXmlElement {\n\t\tvar result = <OpenXmlElement>{\n\t\t\ttype: DomType.Drawing,\n\t\t\tchildren: [],\n\t\t\tcssStyle: {},\n\t\t};\n\t\tvar isAnchor = node.localName == \"anchor\";\n\n\t\t//TODO\n\t\t// result.style[\"margin-left\"] = xml.sizeAttr(node, \"distL\", SizeType.Emu);\n\t\t// result.style[\"margin-top\"] = xml.sizeAttr(node, \"distT\", SizeType.Emu);\n\t\t// result.style[\"margin-right\"] = xml.sizeAttr(node, \"distR\", SizeType.Emu);\n\t\t// result.style[\"margin-bottom\"] = xml.sizeAttr(node, \"distB\", SizeType.Emu);\n\n\t\tlet wrapType: \"wrapTopAndBottom\" | \"wrapNone\" | null = null;\n\t\tlet simplePos = xml.boolAttr(node, \"simplePos\");\n\n\t\tlet posX = { relative: \"page\", align: \"left\", offset: \"0\" };\n\t\tlet posY = { relative: \"page\", align: \"top\", offset: \"0\" };\n\n\t\tfor (var n of xml.elements(node)) {\n\t\t\tswitch (n.localName) {\n\t\t\t\tcase \"simplePos\":\n\t\t\t\t\tif (simplePos) {\n\t\t\t\t\t\tposX.offset = xml.lengthAttr(n, \"x\", LengthUsage.Emu);\n\t\t\t\t\t\tposY.offset = xml.lengthAttr(n, \"y\", LengthUsage.Emu);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"extent\":\n\t\t\t\t\tresult.cssStyle[\"width\"] = xml.lengthAttr(\n\t\t\t\t\t\tn,\n\t\t\t\t\t\t\"cx\",\n\t\t\t\t\t\tLengthUsage.Emu\n\t\t\t\t\t);\n\t\t\t\t\tresult.cssStyle[\"height\"] = xml.lengthAttr(\n\t\t\t\t\t\tn,\n\t\t\t\t\t\t\"cy\",\n\t\t\t\t\t\tLengthUsage.Emu\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"positionH\":\n\t\t\t\tcase \"positionV\":\n\t\t\t\t\tif (!simplePos) {\n\t\t\t\t\t\tlet pos = n.localName == \"positionH\" ? posX : posY;\n\t\t\t\t\t\tvar alignNode = xml.element(n, \"align\");\n\t\t\t\t\t\tvar offsetNode = xml.element(n, \"posOffset\");\n\n\t\t\t\t\t\tpos.relative =\n\t\t\t\t\t\t\txml.attr(n, \"relativeFrom\") ?? pos.relative;\n\n\t\t\t\t\t\tif (alignNode) pos.align = alignNode.textContent;\n\n\t\t\t\t\t\tif (offsetNode)\n\t\t\t\t\t\t\tpos.offset = xmlUtil.sizeValue(\n\t\t\t\t\t\t\t\toffsetNode,\n\t\t\t\t\t\t\t\tLengthUsage.Emu\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"wrapTopAndBottom\":\n\t\t\t\t\twrapType = \"wrapTopAndBottom\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"wrapNone\":\n\t\t\t\t\twrapType = \"wrapNone\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"graphic\":\n\t\t\t\t\tvar g = this.parseGraphic(n);\n\n\t\t\t\t\tif (g) result.children.push(g);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (wrapType == \"wrapTopAndBottom\") {\n\t\t\tresult.cssStyle[\"display\"] = \"block\";\n\n\t\t\tif (posX.align) {\n\t\t\t\tresult.cssStyle[\"text-align\"] = posX.align;\n\t\t\t\tresult.cssStyle[\"width\"] = \"100%\";\n\t\t\t}\n\t\t} else if (wrapType == \"wrapNone\") {\n\t\t\tresult.cssStyle[\"display\"] = \"block\";\n\t\t\tresult.cssStyle[\"position\"] = \"relative\";\n\t\t\tresult.cssStyle[\"width\"] = \"0px\";\n\t\t\tresult.cssStyle[\"height\"] = \"0px\";\n\n\t\t\tif (posX.offset) result.cssStyle[\"left\"] = posX.offset;\n\t\t\tif (posY.offset) result.cssStyle[\"top\"] = posY.offset;\n\t\t} else if (\n\t\t\tisAnchor &&\n\t\t\t(posX.align == \"left\" || posX.align == \"right\")\n\t\t) {\n\t\t\tresult.cssStyle[\"float\"] = posX.align;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tparseGraphic(elem: Element): OpenXmlElement {\n\t\tvar graphicData = xml.element(elem, \"graphicData\");\n\n\t\tfor (let n of xml.elements(graphicData)) {\n\t\t\tswitch (n.localName) {\n\t\t\t\tcase \"pic\":\n\t\t\t\t\treturn this.parsePicture(n);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tparsePicture(elem: Element): IDomImage {\n\t\tvar result = <IDomImage>{ type: DomType.Image, src: \"\", cssStyle: {} };\n\t\tvar blipFill = xml.element(elem, \"blipFill\");\n\t\tvar blip = xml.element(blipFill, \"blip\");\n\n\t\tresult.src = xml.attr(blip, \"embed\");\n\n\t\tvar spPr = xml.element(elem, \"spPr\");\n\t\tvar xfrm = xml.element(spPr, \"xfrm\");\n\n\t\tresult.cssStyle[\"position\"] = \"relative\";\n\n\t\tfor (var n of xml.elements(xfrm)) {\n\t\t\tswitch (n.localName) {\n\t\t\t\tcase \"ext\":\n\t\t\t\t\tresult.cssStyle[\"width\"] = xml.lengthAttr(\n\t\t\t\t\t\tn,\n\t\t\t\t\t\t\"cx\",\n\t\t\t\t\t\tLengthUsage.Emu\n\t\t\t\t\t);\n\t\t\t\t\tresult.cssStyle[\"height\"] = xml.lengthAttr(\n\t\t\t\t\t\tn,\n\t\t\t\t\t\t\"cy\",\n\t\t\t\t\t\tLengthUsage.Emu\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"off\":\n\t\t\t\t\tresult.cssStyle[\"left\"] = xml.lengthAttr(\n\t\t\t\t\t\tn,\n\t\t\t\t\t\t\"x\",\n\t\t\t\t\t\tLengthUsage.Emu\n\t\t\t\t\t);\n\t\t\t\t\tresult.cssStyle[\"top\"] = xml.lengthAttr(\n\t\t\t\t\t\tn,\n\t\t\t\t\t\t\"y\",\n\t\t\t\t\t\tLengthUsage.Emu\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tparseTable(node: Element): WmlTable {\n\t\tvar result: WmlTable = { type: DomType.Table, children: [] };\n\n\t\txmlUtil.foreach(node, (c) => {\n\t\t\tswitch (c.localName) {\n\t\t\t\tcase \"tr\":\n\t\t\t\t\tresult.children.push(this.parseTableRow(c));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tblGrid\":\n\t\t\t\t\tresult.columns = this.parseTableColumns(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tblPr\":\n\t\t\t\t\tthis.parseTableProperties(c, result);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tparseTableColumns(node: Element): WmlTableColumn[] {\n\t\tvar result = [];\n\n\t\txmlUtil.foreach(node, (n) => {\n\t\t\tswitch (n.localName) {\n\t\t\t\tcase \"gridCol\":\n\t\t\t\t\tresult.push({ width: xml.lengthAttr(n, \"w\") });\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tparseTableProperties(elem: Element, table: WmlTable) {\n\t\ttable.cssStyle = {};\n\t\ttable.cellStyle = {};\n\n\t\tthis.parseDefaultProperties(\n\t\t\telem,\n\t\t\ttable.cssStyle,\n\t\t\ttable.cellStyle,\n\t\t\t(c) => {\n\t\t\t\tswitch (c.localName) {\n\t\t\t\t\tcase \"tblStyle\":\n\t\t\t\t\t\ttable.styleName = xml.attr(c, \"val\");\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"tblLook\":\n\t\t\t\t\t\ttable.className = values.classNameOftblLook(c);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"tblpPr\":\n\t\t\t\t\t\tthis.parseTablePosition(c, table);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"tblStyleColBandSize\":\n\t\t\t\t\t\ttable.colBandSize = xml.intAttr(c, \"val\");\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"tblStyleRowBandSize\":\n\t\t\t\t\t\ttable.rowBandSize = xml.intAttr(c, \"val\");\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\n\t\tswitch (table.cssStyle[\"text-align\"]) {\n\t\t\tcase \"center\":\n\t\t\t\tdelete table.cssStyle[\"text-align\"];\n\t\t\t\ttable.cssStyle[\"margin-left\"] = \"auto\";\n\t\t\t\ttable.cssStyle[\"margin-right\"] = \"auto\";\n\t\t\t\tbreak;\n\n\t\t\tcase \"right\":\n\t\t\t\tdelete table.cssStyle[\"text-align\"];\n\t\t\t\ttable.cssStyle[\"margin-left\"] = \"auto\";\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tparseTablePosition(node: Element, table: WmlTable) {\n\t\tvar topFromText = xml.lengthAttr(node, \"topFromText\");\n\t\tvar bottomFromText = xml.lengthAttr(node, \"bottomFromText\");\n\t\tvar rightFromText = xml.lengthAttr(node, \"rightFromText\");\n\t\tvar leftFromText = xml.lengthAttr(node, \"leftFromText\");\n\n\t\ttable.cssStyle[\"float\"] = \"left\";\n\t\ttable.cssStyle[\"margin-bottom\"] = values.addSize(\n\t\t\ttable.cssStyle[\"margin-bottom\"],\n\t\t\tbottomFromText\n\t\t);\n\t\ttable.cssStyle[\"margin-left\"] = values.addSize(\n\t\t\ttable.cssStyle[\"margin-left\"],\n\t\t\tleftFromText\n\t\t);\n\t\ttable.cssStyle[\"margin-right\"] = values.addSize(\n\t\t\ttable.cssStyle[\"margin-right\"],\n\t\t\trightFromText\n\t\t);\n\t\ttable.cssStyle[\"margin-top\"] = values.addSize(\n\t\t\ttable.cssStyle[\"margin-top\"],\n\t\t\ttopFromText\n\t\t);\n\t}\n\n\tparseTableRow(node: Element): WmlTableRow {\n\t\tvar result: WmlTableRow = { type: DomType.Row, children: [] };\n\n\t\txmlUtil.foreach(node, (c) => {\n\t\t\tswitch (c.localName) {\n\t\t\t\tcase \"tc\":\n\t\t\t\t\tresult.children.push(this.parseTableCell(c));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"trPr\":\n\t\t\t\t\tthis.parseTableRowProperties(c, result);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tparseTableRowProperties(elem: Element, row: WmlTableRow) {\n\t\trow.cssStyle = this.parseDefaultProperties(elem, {}, null, (c) => {\n\t\t\tswitch (c.localName) {\n\t\t\t\tcase \"cnfStyle\":\n\t\t\t\t\trow.className = values.classNameOfCnfStyle(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tblHeader\":\n\t\t\t\t\trow.isHeader = xml.boolAttr(c, \"val\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\tparseTableCell(node: Element): OpenXmlElement {\n\t\tvar result: WmlTableCell = { type: DomType.Cell, children: [] };\n\n\t\txmlUtil.foreach(node, (c) => {\n\t\t\tswitch (c.localName) {\n\t\t\t\tcase \"tbl\":\n\t\t\t\t\tresult.children.push(this.parseTable(c));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"p\":\n\t\t\t\t\tresult.children.push(this.parseParagraph(c));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tcPr\":\n\t\t\t\t\tthis.parseTableCellProperties(c, result);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tparseTableCellProperties(elem: Element, cell: WmlTableCell) {\n\t\tcell.cssStyle = this.parseDefaultProperties(elem, {}, null, (c) => {\n\t\t\tswitch (c.localName) {\n\t\t\t\tcase \"gridSpan\":\n\t\t\t\t\tcell.span = xml.intAttr(c, \"val\", null);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"vMerge\":\n\t\t\t\t\tcell.verticalMerge = xml.attr(c, \"val\") ?? \"continue\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"cnfStyle\":\n\t\t\t\t\tcell.className = values.classNameOfCnfStyle(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\tparseDefaultProperties(\n\t\telem: Element,\n\t\tstyle: Record<string, string> = null,\n\t\tchildStyle: Record<string, string> = null,\n\t\thandler: (prop: Element) => boolean = null\n\t): Record<string, string> {\n\t\tstyle = style || {};\n\t\tlet letterSpacing = 0;\n\t\tlet scale = 1;\n\t\txmlUtil.foreach(elem, (c) => {\n\t\t\tif (handler?.(c)) return;\n\n\t\t\tswitch (c.localName) {\n\t\t\t\tcase \"jc\":\n\t\t\t\t\tstyle[\"text-align\"] = values.valueOfJc(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"textAlignment\":\n\t\t\t\t\tstyle[\"vertical-align\"] = values.valueOfTextAlignment(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"color\":\n\t\t\t\t\tstyle[\"color\"] = xmlUtil.colorAttr(\n\t\t\t\t\t\tc,\n\t\t\t\t\t\t\"val\",\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tautos.color\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"sz\":\n\t\t\t\t\tstyle[\"font-size\"] = style[\"min-height\"] = xml.lengthAttr(\n\t\t\t\t\t\tc,\n\t\t\t\t\t\t\"val\",\n\t\t\t\t\t\tLengthUsage.FontSize\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"shd\":\n\t\t\t\t\tstyle[\"background-color\"] = xmlUtil.colorAttr(\n\t\t\t\t\t\tc,\n\t\t\t\t\t\t\"fill\",\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tautos.shd\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"highlight\":\n\t\t\t\t\tstyle[\"background-color\"] = xmlUtil.colorAttr(\n\t\t\t\t\t\tc,\n\t\t\t\t\t\t\"val\",\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tautos.highlight\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"vertAlign\":\n\t\t\t\t\t//TODO\n\t\t\t\t\t// style.verticalAlign = values.valueOfVertAlign(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"position\":\n\t\t\t\t\tstyle.verticalAlign = xml.lengthAttr(\n\t\t\t\t\t\tc,\n\t\t\t\t\t\t\"val\",\n\t\t\t\t\t\tLengthUsage.FontSize\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tcW\":\n\t\t\t\t\tif (this.options.ignoreWidth) break;\n\n\t\t\t\tcase \"tblW\":\n\t\t\t\t\tstyle[\"width\"] = values.valueOfSize(c, \"w\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"trHeight\":\n\t\t\t\t\tthis.parseTrHeight(c, style);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"strike\":\n\t\t\t\t\tstyle[\"text-decoration\"] = xml.boolAttr(c, \"val\", true)\n\t\t\t\t\t\t? \"line-through\"\n\t\t\t\t\t\t: \"none\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"b\":\n\t\t\t\t\tstyle[\"font-weight\"] = xml.boolAttr(c, \"val\", true)\n\t\t\t\t\t\t? \"bold\"\n\t\t\t\t\t\t: \"normal\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"i\":\n\t\t\t\t\tstyle[\"font-style\"] = xml.boolAttr(c, \"val\", true)\n\t\t\t\t\t\t? \"italic\"\n\t\t\t\t\t\t: \"normal\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"caps\":\n\t\t\t\t\tstyle[\"text-transform\"] = xml.boolAttr(c, \"val\", true)\n\t\t\t\t\t\t? \"uppercase\"\n\t\t\t\t\t\t: \"none\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"smallCaps\":\n\t\t\t\t\tstyle[\"text-transform\"] = xml.boolAttr(c, \"val\", true)\n\t\t\t\t\t\t? \"lowercase\"\n\t\t\t\t\t\t: \"none\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"u\":\n\t\t\t\t\tthis.parseUnderline(c, style);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"ind\":\n\t\t\t\tcase \"tblInd\":\n\t\t\t\t\tthis.parseIndentation(c, style);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"rFonts\":\n\t\t\t\t\tthis.parseFont(c, style);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tblBorders\":\n\t\t\t\t\tthis.parseBorderProperties(c, childStyle || style);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tblCellSpacing\":\n\t\t\t\t\tstyle[\"border-spacing\"] = values.valueOfMargin(c);\n\t\t\t\t\tstyle[\"border-collapse\"] = \"separate\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"pBdr\":\n\t\t\t\t\tthis.parseBorderProperties(c, style);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"bdr\":\n\t\t\t\t\tstyle[\"border\"] = values.valueOfBorder(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tcBorders\":\n\t\t\t\t\tthis.parseBorderProperties(c, style);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"vanish\":\n\t\t\t\t\tif (xml.boolAttr(c, \"val\", true)) style[\"display\"] = \"none\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"kern\":\n\t\t\t\t\t//TODO\n\t\t\t\t\t//style['letter-spacing'] = xml.lengthAttr(elem, 'val', LengthUsage.FontSize);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"noWrap\":\n\t\t\t\t\t//TODO\n\t\t\t\t\t//style[\"white-space\"] = \"nowrap\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tblCellMar\":\n\t\t\t\tcase \"tcMar\":\n\t\t\t\t\tthis.parseMarginProperties(c, childStyle || style);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"tblLayout\":\n\t\t\t\t\tstyle[\"table-layout\"] = values.valueOfTblLayout(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"vAlign\":\n\t\t\t\t\tstyle[\"vertical-align\"] = values.valueOfTextAlignment(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"spacing\":\n\t\t\t\t\tif (elem.localName == \"pPr\") this.parseSpacing(c, style);\n\t\t\t\t\telse if (elem.localName == \"rPr\") {\n\t\t\t\t\t\tletterSpacing = xml.floatAttr(c, \"val\");\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"wordWrap\":\n\t\t\t\t\tif (xml.boolAttr(c, \"val\"))\n\t\t\t\t\t\t//TODO: test with examples\n\t\t\t\t\t\tstyle[\"overflow-wrap\"] = \"break-word\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"w\":\n\t\t\t\t\tscale = xml.floatAttr(c, \"val\");\n\t\t\t\t\tstyle[\"transform\"] = `scaleX(${\n\t\t\t\t\t\tMath.round(scale * 100) / 10000\n\t\t\t\t\t})`;\n\t\t\t\t\tstyle[\"display\"] = \"inline-block\";\n\t\t\t\t\tstyle[\"transform-origin\"] = \"center left\";\n\t\t\t\t\tstyle[\"width\"] = `${Math.ceil(10000 / scale)}%`;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"bCs\":\n\t\t\t\tcase \"iCs\":\n\t\t\t\tcase \"szCs\":\n\t\t\t\tcase \"tabs\": //ignore - tabs is parsed by other parser\n\t\t\t\tcase \"outlineLvl\": //TODO\n\t\t\t\tcase \"contextualSpacing\": //TODO\n\t\t\t\tcase \"tblStyleColBandSize\": //TODO\n\t\t\t\tcase \"tblStyleRowBandSize\": //TODO\n\t\t\t\tcase \"webHidden\": //TODO - maybe web-hidden should be implemented\n\t\t\t\tcase \"pageBreakBefore\": //TODO - maybe ignore\n\t\t\t\tcase \"suppressLineNumbers\": //TODO - maybe ignore\n\t\t\t\tcase \"keepLines\": //TODO - maybe ignore\n\t\t\t\tcase \"keepNext\": //TODO - maybe ignore\n\t\t\t\tcase \"lang\":\n\t\t\t\tcase \"widowControl\": //TODO - maybe ignore\n\t\t\t\tcase \"bidi\": //TODO - maybe ignore\n\t\t\t\tcase \"rtl\": //TODO - maybe ignore\n\t\t\t\tcase \"noProof\": //ignore spellcheck\n\t\t\t\t\t//TODO ignore\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tif (this.options.debug)\n\t\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\t`DOCX: Unknown document element: ${elem.localName}.${c.localName}`\n\t\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\tif (letterSpacing !== 0) {\n\t\t\tconsole.log(letterSpacing, scale);\n\t\t\tstyle[\"letter-spacing\"] = `${\n\t\t\t\tMath.ceil((letterSpacing * 100) / scale) / 10\n\t\t\t}pt`;\n\t\t}\n\n\t\treturn style;\n\t}\n\n\tparseUnderline(node: Element, style: Record<string, string>) {\n\t\tvar val = xml.attr(node, \"val\");\n\n\t\tif (val == null) return;\n\n\t\tswitch (val) {\n\t\t\tcase \"dash\":\n\t\t\tcase \"dashDotDotHeavy\":\n\t\t\tcase \"dashDotHeavy\":\n\t\t\tcase \"dashedHeavy\":\n\t\t\tcase \"dashLong\":\n\t\t\tcase \"dashLongHeavy\":\n\t\t\tcase \"dotDash\":\n\t\t\tcase \"dotDotDash\":\n\t\t\t\tstyle[\"text-decoration-style\"] = \"dashed\";\n\t\t\t\tbreak;\n\n\t\t\tcase \"dotted\":\n\t\t\tcase \"dottedHeavy\":\n\t\t\t\tstyle[\"text-decoration-style\"] = \"dotted\";\n\t\t\t\tbreak;\n\n\t\t\tcase \"double\":\n\t\t\t\tstyle[\"text-decoration-style\"] = \"double\";\n\t\t\t\tbreak;\n\n\t\t\tcase \"single\":\n\t\t\tcase \"thick\":\n\t\t\t\tstyle[\"text-decoration\"] = \"underline\";\n\t\t\t\tbreak;\n\n\t\t\tcase \"wave\":\n\t\t\tcase \"wavyDouble\":\n\t\t\tcase \"wavyHeavy\":\n\t\t\t\tstyle[\"text-decoration-style\"] = \"wavy\";\n\t\t\t\tbreak;\n\n\t\t\tcase \"words\":\n\t\t\t\tstyle[\"text-decoration\"] = \"underline\";\n\t\t\t\tbreak;\n\n\t\t\tcase \"none\":\n\t\t\t\tstyle[\"text-decoration\"] = \"none\";\n\t\t\t\tbreak;\n\t\t}\n\n\t\tvar col = xmlUtil.colorAttr(node, \"color\");\n\n\t\tif (col) style[\"text-decoration-color\"] = col;\n\t}\n\n\tparseFont(node: Element, style: Record<string, string>) {\n\t\tvar ascii = xml.attr(node, \"ascii\");\n\t\tvar asciiTheme = values.themeValue(node, \"asciiTheme\");\n\n\t\tvar fonts = [ascii, asciiTheme].filter((x) => x).join(\", \");\n\n\t\tif (fonts.length > 0) style[\"font-family\"] = fonts;\n\t}\n\n\tparseIndentation(node: Element, style: Record<string, string>) {\n\t\tvar firstLine = xml.lengthAttr(node, \"firstLine\");\n\t\tvar hanging = xml.lengthAttr(node, \"hanging\");\n\t\tvar left = xml.lengthAttr(node, \"left\");\n\t\tvar start = xml.lengthAttr(node, \"start\");\n\t\tvar right = xml.lengthAttr(node, \"right\");\n\t\tvar end = xml.lengthAttr(node, \"end\");\n\n\t\tif (firstLine) style[\"text-indent\"] = firstLine;\n\t\tif (hanging) style[\"text-indent\"] = `-${hanging}`;\n\t\tif (left || start) style[\"margin-left\"] = left || start;\n\t\tif (right || end) style[\"margin-right\"] = right || end;\n\t}\n\n\tparseSpacing(node: Element, style: Record<string, string>) {\n\t\tvar before = xml.lengthAttr(node, \"before\");\n\t\tvar after = xml.lengthAttr(node, \"after\");\n\t\tvar line = xml.intAttr(node, \"line\", null);\n\t\tvar lineRule = xml.attr(node, \"lineRule\");\n\n\t\tif (before) style[\"margin-top\"] = before;\n\t\tif (after) style[\"margin-bottom\"] = after;\n\n\t\tif (line !== null) {\n\t\t\tswitch (lineRule) {\n\t\t\t\tcase \"auto\":\n\t\t\t\t\tstyle[\"line-height\"] = `${(line / 240).toFixed(2)}`;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"atLeast\":\n\t\t\t\t\tstyle[\"line-height\"] = `calc(100% + ${line / 20}pt)`;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tstyle[\"line-height\"] = style[\"min-height\"] = `${\n\t\t\t\t\t\tline / 20\n\t\t\t\t\t}pt`;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tparseMarginProperties(node: Element, output: Record<string, string>) {\n\t\txmlUtil.foreach(node, (c) => {\n\t\t\tswitch (c.localName) {\n\t\t\t\tcase \"left\":\n\t\t\t\t\toutput[\"padding-left\"] = values.valueOfMargin(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"right\":\n\t\t\t\t\toutput[\"padding-right\"] = values.valueOfMargin(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"top\":\n\t\t\t\t\toutput[\"padding-top\"] = values.valueOfMargin(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"bottom\":\n\t\t\t\t\toutput[\"padding-bottom\"] = values.valueOfMargin(c);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\t}\n\n\tparseTrHeight(node: Element, output: Record<string, string>) {\n\t\tswitch (xml.attr(node, \"hRule\")) {\n\t\t\tcase \"exact\":\n\t\t\t\toutput[\"height\"] = xml.lengthAttr(node, \"val\");\n\t\t\t\tbreak;\n\n\t\t\tcase \"atLeast\":\n\t\t\tdefault:\n\t\t\t\toutput[\"height\"] = xml.lengthAttr(node, \"val\");\n\t\t\t\t// min-height doesn't work for tr\n\t\t\t\t//output[\"min-height\"] = xml.sizeAttr(node, \"val\");\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tparseBorderProperties(node: Element, output: Record<string, string>) {\n\t\txmlUtil.foreach(node, (c) => {\n\t\t\tswitch (c.localName) {\n\t\t\t\tcase \"start\":\n\t\t\t\tcase \"left\":\n\t\t\t\t\toutput[\"border-left\"] = values.valueOfBorder(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"end\":\n\t\t\t\tcase \"right\":\n\t\t\t\t\toutput[\"border-right\"] = values.valueOfBorder(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"top\":\n\t\t\t\t\toutput[\"border-top\"] = values.valueOfBorder(c);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"bottom\":\n\t\t\t\t\toutput[\"border-bottom\"] = values.valueOfBorder(c);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\t}\n}\n\nconst knownColors = [\n\t\"black\",\n\t\"blue\",\n\t\"cyan\",\n\t\"darkBlue\",\n\t\"darkCyan\",\n\t\"darkGray\",\n\t\"darkGreen\",\n\t\"darkMagenta\",\n\t\"darkRed\",\n\t\"darkYellow\",\n\t\"green\",\n\t\"lightGray\",\n\t\"magenta\",\n\t\"none\",\n\t\"red\",\n\t\"white\",\n\t\"yellow\",\n];\n\nclass xmlUtil {\n\tstatic foreach(node: Element, cb: (n: Element) => void) {\n\t\tfor (var i = 0; i < node.childNodes.length; i++) {\n\t\t\tlet n = node.childNodes[i];\n\n\t\t\tif (n.nodeType == Node.ELEMENT_NODE) cb(<Element>n);\n\t\t}\n\t}\n\n\tstatic colorAttr(\n\t\tnode: Element,\n\t\tattrName: string,\n\t\tdefValue: string = null,\n\t\tautoColor: string = \"black\"\n\t) {\n\t\tvar v = xml.attr(node, attrName);\n\n\t\tif (v) {\n\t\t\tif (v == \"auto\") {\n\t\t\t\treturn autoColor;\n\t\t\t} else if (knownColors.includes(v)) {\n\t\t\t\treturn v;\n\t\t\t}\n\n\t\t\treturn `#${v}`;\n\t\t}\n\n\t\tvar themeColor = xml.attr(node, \"themeColor\");\n\n\t\treturn themeColor ? `var(--docx-${themeColor}-color)` : defValue;\n\t}\n\n\tstatic sizeValue(node: Element, type: LengthUsageType = LengthUsage.Dxa) {\n\t\treturn convertLength(node.textContent, type);\n\t}\n}\n\nclass values {\n\tstatic themeValue(c: Element, attr: string) {\n\t\tvar val = xml.attr(c, attr);\n\t\treturn val ? `var(--docx-${val}-font)` : null;\n\t}\n\n\tstatic valueOfSize(c: Element, attr: string) {\n\t\tvar type = LengthUsage.Dxa;\n\n\t\tswitch (xml.attr(c, \"type\")) {\n\t\t\tcase \"dxa\":\n\t\t\t\tbreak;\n\t\t\tcase \"pct\":\n\t\t\t\ttype = LengthUsage.Percent;\n\t\t\t\tbreak;\n\t\t\tcase \"auto\":\n\t\t\t\treturn \"auto\";\n\t\t}\n\n\t\treturn xml.lengthAttr(c, attr, type);\n\t}\n\n\tstatic valueOfMargin(c: Element) {\n\t\treturn xml.lengthAttr(c, \"w\");\n\t}\n\n\tstatic valueOfBorder(c: Element) {\n\t\tvar type = xml.attr(c, \"val\");\n\n\t\tif (type == \"nil\") return \"none\";\n\n\t\tvar color = xmlUtil.colorAttr(c, \"color\");\n\t\tvar size = xml.lengthAttr(c, \"sz\", LengthUsage.Border);\n\n\t\treturn `${size} solid ${color == \"auto\" ? autos.borderColor : color}`;\n\t}\n\n\tstatic valueOfTblLayout(c: Element) {\n\t\tvar type = xml.attr(c, \"val\");\n\t\treturn type == \"fixed\" ? \"fixed\" : \"auto\";\n\t}\n\n\tstatic classNameOfCnfStyle(c: Element) {\n\t\tconst val = xml.attr(c, \"val\");\n\t\tconst classes = [\n\t\t\t\"first-row\",\n\t\t\t\"last-row\",\n\t\t\t\"first-col\",\n\t\t\t\"last-col\",\n\t\t\t\"odd-col\",\n\t\t\t\"even-col\",\n\t\t\t\"odd-row\",\n\t\t\t\"even-row\",\n\t\t\t\"ne-cell\",\n\t\t\t\"nw-cell\",\n\t\t\t\"se-cell\",\n\t\t\t\"sw-cell\",\n\t\t];\n\n\t\treturn classes.filter((_, i) => val[i] == \"1\").join(\" \");\n\t}\n\n\tstatic valueOfJc(c: Element) {\n\t\tvar type = xml.attr(c, \"val\");\n\n\t\tswitch (type) {\n\t\t\tcase \"start\":\n\t\t\tcase \"left\":\n\t\t\t\treturn \"left\";\n\t\t\tcase \"center\":\n\t\t\t\treturn \"center\";\n\t\t\tcase \"end\":\n\t\t\tcase \"right\":\n\t\t\t\treturn \"right\";\n\t\t\tcase \"both\":\n\t\t\t\treturn \"justify\";\n\t\t}\n\n\t\treturn type;\n\t}\n\n\tstatic valueOfVertAlign(c: Element, asTagName: boolean = false) {\n\t\tvar type = xml.attr(c, \"val\");\n\n\t\tswitch (type) {\n\t\t\tcase \"subscript\":\n\t\t\t\treturn \"sub\";\n\t\t\tcase \"superscript\":\n\t\t\t\treturn asTagName ? \"sup\" : \"super\";\n\t\t}\n\n\t\treturn asTagName ? null : type;\n\t}\n\n\tstatic valueOfTextAlignment(c: Element) {\n\t\tvar type = xml.attr(c, \"val\");\n\n\t\tswitch (type) {\n\t\t\tcase \"auto\":\n\t\t\tcase \"baseline\":\n\t\t\t\treturn \"baseline\";\n\t\t\tcase \"top\":\n\t\t\t\treturn \"top\";\n\t\t\tcase \"center\":\n\t\t\t\treturn \"middle\";\n\t\t\tcase \"bottom\":\n\t\t\t\treturn \"bottom\";\n\t\t}\n\n\t\treturn type;\n\t}\n\n\tstatic addSize(a: string, b: string): string {\n\t\tif (a == null) return b;\n\t\tif (b == null) return a;\n\n\t\treturn `calc(${a} + ${b})`; //TODO\n\t}\n\n\tstatic classNameOftblLook(c: Element) {\n\t\tconst val = xml.hexAttr(c, \"val\", 0);\n\t\tlet className = \"\";\n\n\t\tif (xml.boolAttr(c, \"firstRow\") || val & 0x0020)\n\t\t\tclassName += \" first-row\";\n\t\tif (xml.boolAttr(c, \"lastRow\") || val & 0x0040)\n\t\t\tclassName += \" last-row\";\n\t\tif (xml.boolAttr(c, \"firstColumn\") || val & 0x0080)\n\t\t\tclassName += \" first-col\";\n\t\tif (xml.boolAttr(c, \"lastColumn\") || val & 0x0100)\n\t\t\tclassName += \" last-col\";\n\t\tif (xml.boolAttr(c, \"noHBand\") || val & 0x0200)\n\t\t\tclassName += \" no-hband\";\n\t\tif (xml.boolAttr(c, \"noVBand\") || val & 0x0400)\n\t\t\tclassName += \" no-vband\";\n\n\t\treturn className.trim();\n\t}\n}\n","import { Part } from \"../common/part\";\nimport { CorePropsDeclaration, parseCoreProps } from \"./core-props\";\n\nexport class CorePropsPart extends Part {\n    props: CorePropsDeclaration;\n\n    parseXml(root: Element) {\n        this.props = parseCoreProps(root, this._package.xmlParser);\n    }\n}","import { XmlParser } from \"../parser/xml-parser\";\n\nexport interface CorePropsDeclaration {\n    title: string,\n    description: string,\n    subject: string,\n    creator: string,\n    keywords: string,\n    language: string,\n    lastModifiedBy: string,\n    revision: number,\n}\n\nexport function parseCoreProps(root: Element, xmlParser: XmlParser): CorePropsDeclaration {\n    const result = <CorePropsDeclaration>{};\n\n    for (let el of xmlParser.elements(root)) {\n        switch (el.localName) {\n            case \"title\": result.title = el.textContent; break;\n            case \"description\": result.description = el.textContent; break;\n            case \"subject\": result.subject = el.textContent; break;\n            case \"creator\": result.creator = el.textContent; break;\n            case \"keywords\": result.keywords = el.textContent; break;\n            case \"language\": result.language = el.textContent; break;\n            case \"lastModifiedBy\": result.lastModifiedBy = el.textContent; break;\n            case \"revision\": el.textContent && (result.revision = parseInt(el.textContent)); break;\n        }\n    }\n\n    return result;\n}","import { Part } from \"../common/part\";\nimport { CustomProperty, parseCustomProps } from \"./custom-props\";\n\nexport class CustomPropsPart extends Part {\n    props: CustomProperty[];\n\n    parseXml(root: Element) {\n        this.props = parseCustomProps(root, this._package.xmlParser);\n    }\n}","import { XmlParser } from \"../parser/xml-parser\";\n\nexport interface CustomProperty {\n\tformatId: string;\n\tname: string;\n\ttype: string;\n\tvalue: string;\n}\n\nexport function parseCustomProps(root: Element, xml: XmlParser): CustomProperty[] {\n\treturn xml.elements(root, \"property\").map(e => {\n\t\tconst firstChild = e.firstChild;\n\n\t\treturn {\n\t\t\tformatId: xml.attr(e, \"fmtid\"),\n\t\t\tname: xml.attr(e, \"name\"),\n\t\t\ttype: firstChild.nodeName,\n\t\t\tvalue: firstChild.textContent\n\t\t};\n\t});\n}","import { Part } from \"../common/part\";\nimport { ExtendedPropsDeclaration, parseExtendedProps } from \"./extended-props\";\n\nexport class ExtendedPropsPart extends Part {\n    props: ExtendedPropsDeclaration;\n\n    parseXml(root: Element) {\n        this.props = parseExtendedProps(root, this._package.xmlParser);\n    }\n}","import { XmlParser } from \"../parser/xml-parser\";\n\nexport interface ExtendedPropsDeclaration {\n    template: string,\n    totalTime: number,\n    pages: number,\n    words: number,\n    characters: number,\n    application: string,\n    lines: number,\n    paragraphs: number,\n    company: string,\n    appVersion: string\n}\n\nexport function parseExtendedProps(root: Element, xmlParser: XmlParser): ExtendedPropsDeclaration {\n    const result = <ExtendedPropsDeclaration>{\n\n    };\n\n    for (let el of xmlParser.elements(root)) {\n        switch (el.localName) {\n            case \"Template\":\n                result.template = el.textContent;\n                break;\n            case \"Pages\":\n                result.pages = safeParseToInt(el.textContent);\n                break;\n            case \"Words\":\n                result.words = safeParseToInt(el.textContent);\n                break;\n            case \"Characters\":\n                result.characters = safeParseToInt(el.textContent);\n                break;\n            case \"Application\":\n                result.application = el.textContent;\n                break;\n            case \"Lines\":\n                result.lines = safeParseToInt(el.textContent);\n                break;\n            case \"Paragraphs\":\n                result.paragraphs = safeParseToInt(el.textContent);\n                break;\n            case \"Company\":\n                result.company = el.textContent;\n                break;\n            case \"AppVersion\":\n                result.appVersion = el.textContent;\n                break;\n        }\n    }\n\n    return result;\n}\n\nfunction safeParseToInt(value: string): number {\n    if (typeof value === 'undefined')\n        return;\n    return parseInt(value);\n}","import { XmlParser } from \"../parser/xml-parser\";\nimport { DomType, OpenXmlElement } from \"./dom\";\n\nexport interface WmlBookmarkStart extends OpenXmlElement {\n    id: string;\n    name: string;\n    colFirst: number;\n    colLast: number;\n}\n\nexport interface WmlBookmarkEnd extends OpenXmlElement {\n    id: string;\n}\n\nexport function parseBookmarkStart(elem: Element, xml: XmlParser): WmlBookmarkStart {\n    return {\n        type: DomType.BookmarkStart,\n        id: xml.attr(elem, \"id\"),\n        name: xml.attr(elem, \"name\"),\n        colFirst: xml.intAttr(elem, \"colFirst\"),\n        colLast: xml.intAttr(elem, \"colLast\")\n    }\n}\n\nexport function parseBookmarkEnd(elem: Element, xml: XmlParser): WmlBookmarkEnd {\n    return {\n        type: DomType.BookmarkEnd,\n        id: xml.attr(elem, \"id\")\n    }\n}","import { XmlParser } from \"../parser/xml-parser\";\nimport { Length, LengthUsage } from \"./common\";\n\nexport interface Border {\n    color: string;\n    type: string;\n    size: Length;\n    frame: boolean;\n    shadow: boolean;\n    offset: Length;\n}\n\nexport interface Borders {\n    top: Border;\n    left: Border;\n    right: Border;\n    bottom: Border;\n}\n\nexport function parseBorder(elem: Element, xml: XmlParser): Border {\n    return {\n        type: xml.attr(elem, \"val\"),\n        color: xml.attr(elem, \"color\"),\n        size: xml.lengthAttr(elem, \"sz\", LengthUsage.Border),\n        offset: xml.lengthAttr(elem, \"space\", LengthUsage.Point),\n        frame: xml.boolAttr(elem, 'frame'),\n        shadow: xml.boolAttr(elem, 'shadow')\n    };\n}\n\nexport function parseBorders(elem: Element, xml: XmlParser): Borders {\n    var result = <Borders>{};\n\n    for (let e of xml.elements(elem)) {\n        switch (e.localName) {\n            case \"left\": result.left = parseBorder(e, xml); break;\n            case \"top\": result.top = parseBorder(e, xml); break;\n            case \"right\": result.right = parseBorder(e, xml); break;\n            case \"bottom\": result.bottom = parseBorder(e, xml); break;\n        }\n    }\n\n    return result;\n}","import { XmlParser } from \"../parser/xml-parser\";\n\nexport const ns = {\n    wordml: \"http://schemas.openxmlformats.org/wordprocessingml/2006/main\",\n    drawingml: \"http://schemas.openxmlformats.org/drawingml/2006/main\",\n    picture: \"http://schemas.openxmlformats.org/drawingml/2006/picture\",\n\tcompatibility: \"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n}\n\nexport type LengthType = \"px\" | \"pt\" | \"%\";\nexport type Length = string;\n\nexport interface Font {\n    name: string;\n    family: string;\n}\n\nexport interface CommonProperties {\n    fontSize: Length;\n    color: string;\n}\n\nexport type LengthUsageType = { mul: number, unit: LengthType };\n\nexport const LengthUsage: Record<string, LengthUsageType> = {\n    Dxa: { mul: 0.05, unit: \"pt\" }, //twips\n    Emu: { mul: 1 / 12700, unit: \"pt\" },\n    FontSize: { mul: 0.5, unit: \"pt\" },\n    Border: { mul: 0.125, unit: \"pt\" },\n    Point: { mul: 1, unit: \"pt\" },\n    Percent: { mul: 0.02, unit: \"%\" },\n    LineHeight: { mul: 1 / 240, unit: null }\n}\n\nexport function convertLength(val: string, usage: LengthUsageType = LengthUsage.Dxa): string {\n    //\"simplified\" docx documents use pt's as units\n    if (val == null || /.+(p[xt]|[%])$/.test(val)) {\n        return val;\n    }\n\n\treturn `${(parseInt(val) * usage.mul).toFixed(2)}${usage.unit ?? ''}`;\n}\n\nexport function convertBoolean(v: string, defaultValue = false): boolean {\n    switch (v) {\n        case \"1\": return true;\n        case \"0\": return false;\n        case \"on\": return true;\n        case \"off\": return false;\n        case \"true\": return true;\n        case \"false\": return false;\n        default: return defaultValue;\n    }\n}\n\nexport function convertPercentage(val: string): number {\n    return val ? parseInt(val) / 100 : null;\n}\n\nexport function parseCommonProperty(elem: Element, props: CommonProperties, xml: XmlParser): boolean {\n    if(elem.namespaceURI != ns.wordml)\n        return false;\n\n    switch(elem.localName) {\n        case \"color\": \n            props.color = xml.attr(elem, \"val\");\n            break;\n\n        case \"sz\":\n            props.fontSize = xml.lengthAttr(elem, \"val\", LengthUsage.FontSize);\n            break;\n\n        default:\n            return false;\n    }\n\n    return true;\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\nimport { Part } from \"../common/part\";\nimport { DocumentParser } from \"../document-parser\";\nimport { DocumentElement } from \"./document\";\n\nexport class DocumentPart extends Part {\n    private _documentParser: DocumentParser;\n\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\n        super(pkg, path);\n        this._documentParser = parser;\n    }\n    \n    body: DocumentElement\n\n    parseXml(root: Element) {\n        this.body = this._documentParser.parseDocumentFile(root);\n    }\n}","export enum DomType {\n    Document = \"document\",\n    Paragraph = \"paragraph\",\n    Run = \"run\",\n    Break = \"break\",\n    NoBreakHyphen = \"noBreakHyphen\",\n    Table = \"table\",\n    Row = \"row\",\n    Cell = \"cell\",\n    Hyperlink = \"hyperlink\",\n    Drawing = \"drawing\",\n    Image = \"image\",\n    Text = \"text\",\n    Tab = \"tab\",\n    Symbol = \"symbol\",\n    BookmarkStart = \"bookmarkStart\",\n    BookmarkEnd = \"bookmarkEnd\",\n    Footer = \"footer\",\n    Header = \"header\",\n    FootnoteReference = \"footnoteReference\", \n\tEndnoteReference = \"endnoteReference\",\n    Footnote = \"footnote\",\n    Endnote = \"endnote\",\n    SimpleField = \"simpleField\",\n    ComplexField = \"complexField\",\n    Instruction = \"instruction\",\n\tVmlPicture = \"vmlPicture\",\n\tVmlShape = \"vmlShape\",\n\tMmlMath = \"mmlMath\",\n\tMmlFraction = \"mmlFraction\",\n\tMmlNumerator = \"mmlNumerator\",\n\tMmlDenominator = \"mmlDenominator\",\n}\n\nexport interface OpenXmlElement {\n    type: DomType;\n    children?: OpenXmlElement[];\n    cssStyle?: Record<string, string>;\n    \n\tstyleName?: string; //style name\n\tclassName?: string; //class mods\n\n    parent?: OpenXmlElement;\n}\n\nexport interface WmlHyperlink extends OpenXmlElement {\n\tid?: string;\n    href?: string;\n}\n\nexport interface WmlNoteReference extends OpenXmlElement {\n    id: string;\n}\n\nexport interface WmlBreak extends OpenXmlElement{\n    break: \"page\" | \"lastRenderedPageBreak\" | \"textWrapping\";\n}\n\nexport interface WmlText extends OpenXmlElement{\n    text: string;\n}\n\nexport interface WmlSymbol extends OpenXmlElement {\n    font: string;\n    char: string;\n}\n\nexport interface WmlTable extends OpenXmlElement {\n    columns?: WmlTableColumn[];\n    cellStyle?: Record<string, string>;\n\n\tcolBandSize?: number;\n\trowBandSize?: number;\n}\n\nexport interface WmlTableRow extends OpenXmlElement {\n\tisHeader?: boolean;\n}\n\nexport interface WmlTableCell extends OpenXmlElement {\n\tverticalMerge?: 'restart' | 'continue' | string;\n    span?: number;\n}\n\nexport interface IDomImage extends OpenXmlElement {\n    src: string;\n}\n\nexport interface WmlTableColumn {\n    width?: string;\n}\n\nexport interface IDomNumbering {\n    id: string;\n    level: number;\n    pStyleName: string;\n    pStyle: Record<string, string>;\n    rStyle: Record<string, string>;\n    levelText?: string;\n    suff: string;\n    format?: string;\n    bullet?: NumberingPicBullet;\n}\n\nexport interface NumberingPicBullet {\n    id: number;\n    src: string;\n    style?: string;\n}\n","import { XmlParser } from \"../parser/xml-parser\";\nimport { Length } from \"./common\";\n\nexport interface LineSpacing {\n    after: Length;\n    before: Length;\n    line: number;\n    lineRule: \"atLeast\" | \"exactly\" | \"auto\";\n}\n\nexport function parseLineSpacing(elem: Element, xml: XmlParser): LineSpacing {\n    return {\n        before: xml.lengthAttr(elem, \"before\"),\n        after: xml.lengthAttr(elem, \"after\"),\n        line: xml.intAttr(elem, \"line\"),\n        lineRule: xml.attr(elem, \"lineRule\")\n    } as LineSpacing;\n}","import { OpenXmlElement } from \"./dom\";\nimport { CommonProperties, Length, ns, parseCommonProperty } from \"./common\";\nimport { Borders } from \"./border\";\nimport { parseSectionProperties, SectionProperties } from \"./section\";\nimport { LineSpacing, parseLineSpacing } from \"./line-spacing\";\nimport { XmlParser } from \"../parser/xml-parser\";\nimport { parseRunProperties, RunProperties } from \"./run\";\n\nexport interface WmlParagraph extends OpenXmlElement, ParagraphProperties {\n}\n\nexport interface ParagraphProperties extends CommonProperties {\n    sectionProps: SectionProperties;\n    tabs: ParagraphTab[];\n    numbering: ParagraphNumbering;\n\n    border: Borders;\n    textAlignment: \"auto\" | \"baseline\" | \"bottom\" | \"center\" | \"top\" | string;\n    lineSpacing: LineSpacing;\n    keepLines: boolean;\n    keepNext: boolean;\n    pageBreakBefore: boolean;\n    outlineLevel: number;\n\tstyleName?: string;\n\n    runProps: RunProperties;\n}\n\nexport interface ParagraphTab {\n    style: \"bar\" | \"center\" | \"clear\" | \"decimal\" | \"end\" | \"num\" | \"start\" | \"left\" | \"right\";\n    leader: \"none\" | \"dot\" | \"heavy\" | \"hyphen\" | \"middleDot\" | \"underscore\";\n    position: Length;\n}\n\nexport interface ParagraphNumbering {\n    id: string;\n    level: number;\n}\n\nexport function parseParagraphProperties(elem: Element, xml: XmlParser): ParagraphProperties {\n    let result = <ParagraphProperties>{};\n\n    for(let el of xml.elements(elem)) {\n        parseParagraphProperty(el, result, xml);\n    }\n\n    return result;\n}\n\nexport function parseParagraphProperty(elem: Element, props: ParagraphProperties, xml: XmlParser) {\n    if (elem.namespaceURI != ns.wordml)\n        return false;\n\n    if(parseCommonProperty(elem, props, xml))\n        return true;\n\n    switch (elem.localName) {\n        case \"tabs\":\n            props.tabs = parseTabs(elem, xml);\n            break;\n\n        case \"sectPr\":\n            props.sectionProps = parseSectionProperties(elem, xml);\n            break;\n\n        case \"numPr\":\n            props.numbering = parseNumbering(elem, xml);\n            break;\n        \n        case \"spacing\":\n            props.lineSpacing = parseLineSpacing(elem, xml);\n            return false; // TODO\n            break;\n\n        case \"textAlignment\":\n            props.textAlignment = xml.attr(elem, \"val\");\n            return false; //TODO\n            break;\n\n        case \"keepNext\":\n            props.keepLines = xml.boolAttr(elem, \"val\", true);\n            break;\n    \n        case \"keepNext\":\n            props.keepNext = xml.boolAttr(elem, \"val\", true);\n            break;\n        \n        case \"pageBreakBefore\":\n            props.pageBreakBefore = xml.boolAttr(elem, \"val\", true);\n            break;\n        \n        case \"outlineLvl\":\n            props.outlineLevel = xml.intAttr(elem, \"val\");\n            break;\n\n        case \"pStyle\":\n            props.styleName = xml.attr(elem, \"val\");\n            break;\n\n        case \"rPr\":\n            props.runProps = parseRunProperties(elem, xml);\n            break;\n        \n        default:\n            return false;\n    }\n\n    return true;\n}\n\nexport function parseTabs(elem: Element, xml: XmlParser): ParagraphTab[] {\n    return xml.elements(elem, \"tab\")\n        .map(e => <ParagraphTab>{\n            position: xml.lengthAttr(e, \"pos\"),\n            leader: xml.attr(e, \"leader\"),\n            style: xml.attr(e, \"val\")\n        });\n}\n\nexport function parseNumbering(elem: Element, xml: XmlParser): ParagraphNumbering {\n    var result = <ParagraphNumbering>{};\n\n    for (let e of xml.elements(elem)) {\n        switch (e.localName) {\n            case \"numId\":\n                result.id = xml.attr(e, \"val\");\n                break;\n\n            case \"ilvl\":\n                result.level = xml.intAttr(e, \"val\");\n                break;\n        }\n    }\n\n    return result;\n}","import { XmlParser } from \"../parser/xml-parser\";\nimport { CommonProperties, parseCommonProperty } from \"./common\";\nimport { OpenXmlElement } from \"./dom\";\n\nexport interface WmlRun extends OpenXmlElement, RunProperties {\n    id?: string;\n    verticalAlign?: string;\n\tfieldRun?: boolean;  \n}\n\nexport interface RunProperties extends CommonProperties {\n\n}\n\nexport function parseRunProperties(elem: Element, xml: XmlParser): RunProperties {\n    let result = <RunProperties>{};\n\n    for(let el of xml.elements(elem)) {\n        parseRunProperty(el, result, xml);\n    }\n\n    return result;\n}\n\nexport function parseRunProperty(elem: Element, props: RunProperties, xml: XmlParser) {\n    if (parseCommonProperty(elem, props, xml))\n        return true;\n\n    return false;\n}","import globalXmlParser, { XmlParser } from \"../parser/xml-parser\";\nimport { Borders, parseBorders } from \"./border\";\nimport { Length } from \"./common\";\n\nexport interface Column {\n    space: Length;\n    width: Length;\n}\n\nexport interface Columns {\n    space: Length;\n    numberOfColumns: number;\n    separator: boolean;\n    equalWidth: boolean;\n    columns: Column[];\n}\n\nexport interface PageSize {\n    width: Length, \n    height: Length, \n    orientation: \"landscape\" | string \n}\n\nexport interface PageNumber {\n    start: number;\n    chapSep: \"colon\" | \"emDash\" | \"endash\" | \"hyphen\" | \"period\" | string;\n    chapStyle: string;\n    format: \"none\" | \"cardinalText\" | \"decimal\" | \"decimalEnclosedCircle\" | \"decimalEnclosedFullstop\" \n        | \"decimalEnclosedParen\" | \"decimalZero\" | \"lowerLetter\" | \"lowerRoman\"\n        | \"ordinalText\" | \"upperLetter\" | \"upperRoman\" | string;\n}\n\nexport interface PageMargins {\n    top: Length;\n    right: Length;\n    bottom: Length;\n    left: Length;\n    header: Length;\n    footer: Length;\n    gutter: Length;\n}\n\nexport enum SectionType {\n    Continuous = \"continuous\",\n    NextPage = \"nextPage\", \n    NextColumn = \"nextColumn\",\n    EvenPage = \"evenPage\",\n    OddPage = \"oddPage\",\n}\n\nexport interface FooterHeaderReference {\n    id: string;\n    type: string | \"first\" | \"even\" | \"default\";\n}\n\nexport interface SectionProperties {\n    type: SectionType | string;\n    pageSize: PageSize,\n    pageMargins: PageMargins,\n    pageBorders: Borders;\n    pageNumber: PageNumber;\n    columns: Columns;\n    footerRefs: FooterHeaderReference[];\n    headerRefs: FooterHeaderReference[];\n    titlePage: boolean;\n}\n\nexport function parseSectionProperties(elem: Element, xml: XmlParser = globalXmlParser): SectionProperties {\n    var section = <SectionProperties>{};\n\n    for (let e of xml.elements(elem)) {\n        switch (e.localName) {\n            case \"pgSz\":\n                section.pageSize = {\n                    width: xml.lengthAttr(e, \"w\"),\n                    height: xml.lengthAttr(e, \"h\"),\n                    orientation: xml.attr(e, \"orient\")\n                }\n                break;\n\n            case \"type\":\n                section.type = xml.attr(e, \"val\");\n                break;\n\n            case \"pgMar\":\n                section.pageMargins = {\n                    left: xml.lengthAttr(e, \"left\"),\n                    right: xml.lengthAttr(e, \"right\"),\n                    top: xml.lengthAttr(e, \"top\"),\n                    bottom: xml.lengthAttr(e, \"bottom\"),\n                    header: xml.lengthAttr(e, \"header\"),\n                    footer: xml.lengthAttr(e, \"footer\"),\n                    gutter: xml.lengthAttr(e, \"gutter\"),\n                };\n                break;\n\n            case \"cols\":\n                section.columns = parseColumns(e, xml);\n                break;\n\n            case \"headerReference\":\n                (section.headerRefs ?? (section.headerRefs = [])).push(parseFooterHeaderReference(e, xml)); \n                break;\n            \n            case \"footerReference\":\n                (section.footerRefs ?? (section.footerRefs = [])).push(parseFooterHeaderReference(e, xml)); \n                break;\n\n            case \"titlePg\":\n                section.titlePage = xml.boolAttr(e, \"val\", true);\n                break;\n\n            case \"pgBorders\":\n                section.pageBorders = parseBorders(e, xml);\n                break;\n\n            case \"pgNumType\":\n                section.pageNumber = parsePageNumber(e, xml);\n                break;\n        }\n    }\n\n    return section;\n}\n\nfunction parseColumns(elem: Element, xml: XmlParser): Columns {\n    return {\n        numberOfColumns: xml.intAttr(elem, \"num\"),\n        space: xml.lengthAttr(elem, \"space\"),\n        separator: xml.boolAttr(elem, \"sep\"),\n        equalWidth: xml.boolAttr(elem, \"equalWidth\", true),\n        columns: xml.elements(elem, \"col\")\n            .map(e => <Column>{\n                width: xml.lengthAttr(e, \"w\"),\n                space: xml.lengthAttr(e, \"space\")\n            })\n    };\n}\n\nfunction parsePageNumber(elem: Element, xml: XmlParser): PageNumber {\n    return {\n        chapSep: xml.attr(elem, \"chapSep\"),\n        chapStyle: xml.attr(elem, \"chapStyle\"),\n        format: xml.attr(elem, \"fmt\"),\n        start: xml.intAttr(elem, \"start\")\n    };\n}\n\nfunction parseFooterHeaderReference(elem: Element, xml: XmlParser): FooterHeaderReference {\n    return {\n        id: xml.attr(elem, \"id\"),\n        type: xml.attr(elem, \"type\"),\n    }\n}","import { WordDocument } from './word-document';\nimport { DocumentParser } from './document-parser';\nimport { HtmlRenderer } from './html-renderer';\n\nexport interface Options {\n    inWrapper: boolean;\n    ignoreWidth: boolean;\n    ignoreHeight: boolean;\n    ignoreFonts: boolean;\n    breakPages: boolean;\n    debug: boolean;\n    experimental: boolean;\n    className: string;\n    trimXmlDeclaration: boolean;\n    renderHeaders: boolean;\n    renderFooters: boolean;\n    renderFootnotes: boolean;\n\trenderEndnotes: boolean;\n    ignoreLastRenderedPageBreak: boolean;\n\tuseBase64URL: boolean;\n}\n\nexport const defaultOptions: Options = {\n    ignoreHeight: false,\n    ignoreWidth: false,\n    ignoreFonts: false,\n    breakPages: true,\n    debug: false,\n    experimental: false,\n    className: \"docx\",\n    inWrapper: true,\n    trimXmlDeclaration: true,\n    ignoreLastRenderedPageBreak: true,\n    renderHeaders: true,\n    renderFooters: true,\n    renderFootnotes: true,\n\trenderEndnotes: true,\n\tuseBase64URL: false\n}\n\nexport function praseAsync(data: Blob | any, userOptions: Partial<Options> = null): Promise<any>  {\n    const ops = { ...defaultOptions, ...userOptions };\n    return WordDocument.load(data, new DocumentParser(ops), ops);\n}\n\nexport function renderAsync(data: Blob | any, bodyContainer: HTMLElement, styleContainer: HTMLElement = null, userOptions: Partial<Options> = null): Promise<any> {\n    const ops = { ...defaultOptions, ...userOptions };\n    const renderer = new HtmlRenderer(window.document);\n\n    return WordDocument\n        .load(data, new DocumentParser(ops), ops)\n        .then(doc => {\n            renderer.render(doc, bodyContainer, styleContainer, ops);\n            return doc;\n        });\n}","import { Part } from \"../common/part\";\nimport { FontDeclaration, parseFonts } from \"./fonts\";\n\nexport class FontTablePart extends Part {\n    fonts: FontDeclaration[];\n\n    parseXml(root: Element) {\n        this.fonts = parseFonts(root, this._package.xmlParser);\n    }\n}","import { XmlParser } from \"../parser/xml-parser\";\n\nconst embedFontTypeMap = {\n    embedRegular: 'regular',\n    embedBold: 'bold',\n    embedItalic: 'italic',\n    embedBoldItalic: 'boldItalic',\n}\n\nexport interface FontDeclaration {\n    name: string,\n    altName: string,\n    family: string,\n    embedFontRefs: EmbedFontRef[];\n}\n\nexport interface EmbedFontRef {\n    id: string;\n    key: string;\n    type: 'regular' | 'bold' | 'italic' | 'boldItalic';\n}\n\nexport function parseFonts(root: Element, xml: XmlParser): FontDeclaration[] {\n    return xml.elements(root).map(el => parseFont(el, xml));\n}\n\nexport function parseFont(elem: Element, xml: XmlParser): FontDeclaration {\n    let result = <FontDeclaration>{\n        name: xml.attr(elem, \"name\"),\n        embedFontRefs: []\n    };\n\n    for (let el of xml.elements(elem)) {\n        switch (el.localName) {\n            case \"family\":\n                result.family = xml.attr(el, \"val\");\n                break;\n\n            case \"altName\":\n                result.altName = xml.attr(el, \"val\");\n                break;\n\n            case \"embedRegular\":\n            case \"embedBold\":\n            case \"embedItalic\":\n            case \"embedBoldItalic\":\n                result.embedFontRefs.push(parseEmbedFontRef(el, xml));\n                break;\n        }\n    }\n\n    return result;\n}\n\nexport function parseEmbedFontRef(elem: Element, xml: XmlParser): EmbedFontRef {\n    return { \n        id: xml.attr(elem, \"id\"), \n        key: xml.attr(elem, \"fontKey\"),\n        type: embedFontTypeMap[elem.localName]\n    };\n}","import { DomType, OpenXmlElement } from \"../document/dom\";\n\nexport class WmlHeader implements OpenXmlElement {\n    type: DomType = DomType.Header;\n    children?: OpenXmlElement[] = [];\n    cssStyle?: Record<string, string> = {};\n    className?: string;\n    parent?: OpenXmlElement;\n}\n\nexport class WmlFooter implements OpenXmlElement {\n    type: DomType = DomType.Footer;\n    children?: OpenXmlElement[] = [];\n    cssStyle?: Record<string, string> = {};\n    className?: string;\n    parent?: OpenXmlElement;\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\nimport { Part } from \"../common/part\";\nimport { DocumentParser } from \"../document-parser\";\nimport { OpenXmlElement } from \"../document/dom\";\nimport { WmlHeader, WmlFooter } from \"./elements\";\n\nexport abstract class BaseHeaderFooterPart<T extends OpenXmlElement = OpenXmlElement> extends Part {\n    rootElement: T;\n\n    private _documentParser: DocumentParser;\n\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\n        super(pkg, path);\n        this._documentParser = parser;\n    }\n\n    parseXml(root: Element) {\n        this.rootElement = this.createRootElement();\n        this.rootElement.children = this._documentParser.parseBodyElements(root);\n    }\n\n    protected abstract createRootElement(): T;\n}\n\nexport class HeaderPart extends BaseHeaderFooterPart<WmlHeader> {\n    protected createRootElement(): WmlHeader {\n        return new WmlHeader();\n    }\n}\n\nexport class FooterPart extends BaseHeaderFooterPart<WmlFooter> {\n    protected createRootElement(): WmlFooter {\n        return new WmlFooter();\n    }\n}","import { WordDocument } from './word-document';\nimport {\n\tDomType, WmlTable, IDomNumbering,\n\tWmlHyperlink, IDomImage, OpenXmlElement, WmlTableColumn, WmlTableCell, WmlText, WmlSymbol, WmlBreak, WmlNoteReference\n} from './document/dom';\nimport { Length, CommonProperties } from './document/common';\nimport { Options } from './docx-preview';\nimport { DocumentElement } from './document/document';\nimport { WmlParagraph } from './document/paragraph';\nimport { escapeClassName, keyBy, mergeDeep } from './utils';\nimport { computePixelToPoint, updateTabStop } from './javascript';\nimport { FontTablePart } from './font-table/font-table';\nimport { FooterHeaderReference, SectionProperties } from './document/section';\nimport { WmlRun, RunProperties } from './document/run';\nimport { WmlBookmarkStart } from './document/bookmarks';\nimport { IDomStyle } from './document/style';\nimport { WmlBaseNote, WmlFootnote } from './notes/elements';\nimport { ThemePart } from './theme/theme-part';\nimport { BaseHeaderFooterPart } from './header-footer/parts';\nimport { Part } from './common/part';\nimport { VmlShape } from './document/vector';\n\nconst ns = {\n\tsvg: \"http://www.w3.org/2000/svg\",\n\tmathML: \"http://www.w3.org/1998/Math/MathML\"\n}\n\ninterface CellPos {\n\tcol: number;\n\trow: number;\n}\n\ntype CellVerticalMergeType = Record<number, HTMLTableCellElement>;\n\nexport class HtmlRenderer {\n\n\tclassName: string = \"docx\";\n\tdocument: WordDocument;\n\toptions: Options;\n\tstyleMap: Record<string, IDomStyle> = {};\n\tcurrentPart: Part = null;\n\n\ttableVerticalMerges: CellVerticalMergeType[] = [];\n\tcurrentVerticalMerge: CellVerticalMergeType = null;\n\ttableCellPositions: CellPos[] = [];\n\tcurrentCellPosition: CellPos = null;\n\n\tfootnoteMap: Record<string, WmlFootnote> = {};\n\tendnoteMap: Record<string, WmlFootnote> = {};\n\tcurrentFootnoteIds: string[];\n\tcurrentEndnoteIds: string[] = [];\n\tusedHederFooterParts: any[] = [];\n\n\tdefaultTabSize: Length;\n\tcurrentTabs: any[] = [];\n\ttabsTimeout: any = 0;\n\n\tconstructor(public htmlDocument: Document) {\n\t}\n\n\trender(document: WordDocument, bodyContainer: HTMLElement, styleContainer: HTMLElement = null, options: Options) {\n\t\tthis.document = document;\n\t\tthis.options = options;\n\t\tthis.className = options.className;\n\t\tthis.styleMap = null;\n\n\t\tstyleContainer = styleContainer || bodyContainer;\n\n\t\tremoveAllElements(styleContainer);\n\t\tremoveAllElements(bodyContainer);\n\n\t\tappendComment(styleContainer, \"docxjs library predefined styles\");\n\t\tstyleContainer.appendChild(this.renderDefaultStyle());\n\n\t\tif (document.themePart) {\n\t\t\tappendComment(styleContainer, \"docxjs document theme values\");\n\t\t\tthis.renderTheme(document.themePart, styleContainer);\n\t\t}\n\n\t\tif (document.stylesPart != null) {\n\t\t\tthis.styleMap = this.processStyles(document.stylesPart.styles);\n\n\t\t\tappendComment(styleContainer, \"docxjs document styles\");\n\t\t\tstyleContainer.appendChild(this.renderStyles(document.stylesPart.styles));\n\t\t}\n\n\t\tif (document.numberingPart) {\n\t\t\tthis.prodessNumberings(document.numberingPart.domNumberings);\n\n\t\t\tappendComment(styleContainer, \"docxjs document numbering styles\");\n\t\t\tstyleContainer.appendChild(this.renderNumbering(document.numberingPart.domNumberings, styleContainer));\n\t\t\t//styleContainer.appendChild(this.renderNumbering2(document.numberingPart, styleContainer));\n\t\t}\n\n\t\tif (document.footnotesPart) {\n\t\t\tthis.footnoteMap = keyBy(document.footnotesPart.notes, x => x.id);\n\t\t}\n\n\t\tif (document.endnotesPart) {\n\t\t\tthis.endnoteMap = keyBy(document.endnotesPart.notes, x => x.id);\n\t\t}\n\n\t\tif (document.settingsPart) {\n\t\t\tthis.defaultTabSize = document.settingsPart.settings?.defaultTabStop;\n\t\t}\n\n\t\tif (!options.ignoreFonts && document.fontTablePart)\n\t\t\tthis.renderFontTable(document.fontTablePart, styleContainer);\n\n\t\tvar sectionElements = this.renderSections(document.documentPart.body);\n\n\t\tif (this.options.inWrapper) {\n\t\t\tbodyContainer.appendChild(this.renderWrapper(sectionElements));\n\t\t} else {\n\t\t\tappendChildren(bodyContainer, sectionElements);\n\t\t}\n\n\t\tthis.refreshTabStops();\n\t}\n\n\trenderTheme(themePart: ThemePart, styleContainer: HTMLElement) {\n\t\tconst variables = {};\n\t\tconst fontScheme = themePart.theme?.fontScheme;\n\n\t\tif (fontScheme) {\n\t\t\tif (fontScheme.majorFont) {\n\t\t\t\tvariables['--docx-majorHAnsi-font'] = fontScheme.majorFont.latinTypeface;\n\t\t\t}\n\n\t\t\tif (fontScheme.minorFont) {\n\t\t\t\tvariables['--docx-minorHAnsi-font'] = fontScheme.minorFont.latinTypeface;\n\t\t\t}\n\t\t}\n\n\t\tconst colorScheme = themePart.theme?.colorScheme;\n\n\t\tif (colorScheme) {\n\t\t\tfor (let [k, v] of Object.entries(colorScheme.colors)) {\n\t\t\t\tvariables[`--docx-${k}-color`] = `#${v}`;\n\t\t\t}\n\t\t}\n\n\t\tconst cssText = this.styleToString(`.${this.className}`, variables);\n\t\tstyleContainer.appendChild(createStyleElement(cssText));\n\t}\n\n\trenderFontTable(fontsPart: FontTablePart, styleContainer: HTMLElement) {\n\t\tfor (let f of fontsPart.fonts) {\n\t\t\tfor (let ref of f.embedFontRefs) {\n\t\t\t\tthis.document.loadFont(ref.id, ref.key).then(fontData => {\n\t\t\t\t\tconst cssValues = {\n\t\t\t\t\t\t'font-family': f.name,\n\t\t\t\t\t\t'src': `url(${fontData})`\n\t\t\t\t\t};\n\n\t\t\t\t\tif (ref.type == \"bold\" || ref.type == \"boldItalic\") {\n\t\t\t\t\t\tcssValues['font-weight'] = 'bold';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (ref.type == \"italic\" || ref.type == \"boldItalic\") {\n\t\t\t\t\t\tcssValues['font-style'] = 'italic';\n\t\t\t\t\t}\n\n\t\t\t\t\tappendComment(styleContainer, `docxjs ${f.name} font`);\n\t\t\t\t\tconst cssText = this.styleToString(\"@font-face\", cssValues);\n\t\t\t\t\tstyleContainer.appendChild(createStyleElement(cssText));\n\t\t\t\t\tthis.refreshTabStops();\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tprocessStyleName(className: string): string {\n\t\treturn className ? `${this.className}_${escapeClassName(className)}` : this.className;\n\t}\n\n\tprocessStyles(styles: IDomStyle[]) {\n\t\tconst stylesMap = keyBy(styles.filter(x => x.id != null), x => x.id);\n\n\t\tfor (const style of styles.filter(x => x.basedOn)) {\n\t\t\tvar baseStyle = stylesMap[style.basedOn];\n\n\t\t\tif (baseStyle) {\n\t\t\t\tstyle.paragraphProps = mergeDeep(style.paragraphProps, baseStyle.paragraphProps);\n\t\t\t\tstyle.runProps = mergeDeep(style.runProps, baseStyle.runProps);\n\n\t\t\t\tfor (const baseValues of baseStyle.styles) {\n\t\t\t\t\tconst styleValues = style.styles.find(x => x.target == baseValues.target);\n\n\t\t\t\t\tif (styleValues) {\n\t\t\t\t\t\tthis.copyStyleProperties(baseValues.values, styleValues.values);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstyle.styles.push({ ...baseValues, values: { ...baseValues.values } });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.options.debug)\n\t\t\t\tconsole.warn(`Can't find base style ${style.basedOn}`);\n\t\t}\n\n\t\tfor (let style of styles) {\n\t\t\tstyle.cssName = this.processStyleName(style.id);\n\t\t}\n\n\t\treturn stylesMap;\n\t}\n\n\tprodessNumberings(numberings: IDomNumbering[]) {\n\t\tfor (let num of numberings.filter(n => n.pStyleName)) {\n\t\t\tconst style = this.findStyle(num.pStyleName);\n\n\t\t\tif (style?.paragraphProps?.numbering) {\n\t\t\t\tstyle.paragraphProps.numbering.level = num.level;\n\t\t\t}\n\t\t}\n\t}\n\n\tprocessElement(element: OpenXmlElement) {\n\t\tif (element.children) {\n\t\t\tfor (var e of element.children) {\n\t\t\t\te.parent = element;\n\n\t\t\t\tif (e.type == DomType.Table) {\n\t\t\t\t\tthis.processTable(e);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.processElement(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprocessTable(table: WmlTable) {\n\t\tfor (var r of table.children) {\n\t\t\tfor (var c of r.children) {\n\t\t\t\tc.cssStyle = this.copyStyleProperties(table.cellStyle, c.cssStyle, [\n\t\t\t\t\t\"border-left\", \"border-right\", \"border-top\", \"border-bottom\",\n\t\t\t\t\t\"padding-left\", \"padding-right\", \"padding-top\", \"padding-bottom\"\n\t\t\t\t]);\n\n\t\t\t\tthis.processElement(c);\n\t\t\t}\n\t\t}\n\t}\n\n\tcopyStyleProperties(input: Record<string, string>, output: Record<string, string>, attrs: string[] = null): Record<string, string> {\n\t\tif (!input)\n\t\t\treturn output;\n\n\t\tif (output == null) output = {};\n\t\tif (attrs == null) attrs = Object.getOwnPropertyNames(input);\n\n\t\tfor (var key of attrs) {\n\t\t\tif (input.hasOwnProperty(key) && !output.hasOwnProperty(key))\n\t\t\t\toutput[key] = input[key];\n\t\t}\n\n\t\treturn output;\n\t}\n\n\tcreateSection(className: string, props: SectionProperties) {\n\t\tvar elem = this.createElement(\"section\", { className });\n\n\t\tif (props) {\n\t\t\tif (props.pageMargins) {\n\t\t\t\telem.style.paddingLeft = props.pageMargins.left;\n\t\t\t\telem.style.paddingRight = props.pageMargins.right;\n\t\t\t\telem.style.paddingTop = props.pageMargins.top;\n\t\t\t\telem.style.paddingBottom = props.pageMargins.bottom;\n\t\t\t}\n\n\t\t\tif (props.pageSize) {\n\t\t\t\tif (!this.options.ignoreWidth)\n\t\t\t\t\telem.style.width = props.pageSize.width;\n\t\t\t\tif (!this.options.ignoreHeight)\n\t\t\t\t\telem.style.minHeight = props.pageSize.height;\n\t\t\t}\n\n\t\t\tif (props.columns && props.columns.numberOfColumns) {\n\t\t\t\telem.style.columnCount = `${props.columns.numberOfColumns}`;\n\t\t\t\telem.style.columnGap = props.columns.space;\n\n\t\t\t\tif (props.columns.separator) {\n\t\t\t\t\telem.style.columnRule = \"1px solid black\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn elem;\n\t}\n\n\trenderSections(document: DocumentElement): HTMLElement[] {\n\t\tconst result = [];\n\n\t\tthis.processElement(document);\n\t\tconst sections = this.splitBySection(document.children);\n\t\tlet prevProps = null;\n\n\t\tfor (let i = 0, l = sections.length; i < l; i++) {\n\t\t\tthis.currentFootnoteIds = [];\n\n\t\t\tconst section = sections[i];\n\t\t\tconst props = section.sectProps || document.props;\n\t\t\tconst sectionElement = this.createSection(this.className, props);\n\t\t\tthis.renderStyleValues(document.cssStyle, sectionElement);\n\n\t\t\tthis.options.renderHeaders && this.renderHeaderFooter(props.headerRefs, props,\n\t\t\t\tresult.length, prevProps != props, sectionElement);\n\n\t\t\tvar contentElement = this.createElement(\"article\");\n\t\t\tthis.renderElements(section.elements, contentElement);\n\t\t\tsectionElement.appendChild(contentElement);\n\n\t\t\tif (this.options.renderFootnotes) {\n\t\t\t\tthis.renderNotes(this.currentFootnoteIds, this.footnoteMap, sectionElement);\n\t\t\t}\n\n\t\t\tif (this.options.renderEndnotes && i == l - 1) {\n\t\t\t\tthis.renderNotes(this.currentEndnoteIds, this.endnoteMap, sectionElement);\n\t\t\t}\n\n\t\t\tthis.options.renderFooters && this.renderHeaderFooter(props.footerRefs, props,\n\t\t\t\tresult.length, prevProps != props, sectionElement);\n\n\t\t\tresult.push(sectionElement);\n\t\t\tprevProps = props;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\trenderHeaderFooter(refs: FooterHeaderReference[], props: SectionProperties, page: number, firstOfSection: boolean, into: HTMLElement) {\n\t\tif (!refs) return;\n\n\t\tvar ref = (props.titlePage && firstOfSection ? refs.find(x => x.type == \"first\") : null)\n\t\t\t?? (page % 2 == 1 ? refs.find(x => x.type == \"even\") : null)\n\t\t\t?? refs.find(x => x.type == \"default\");\n\n\t\tvar part = ref && this.document.findPartByRelId(ref.id, this.document.documentPart) as BaseHeaderFooterPart;\n\n\t\tif (part) {\n\t\t\tthis.currentPart = part;\n\t\t\tif (!this.usedHederFooterParts.includes(part.path)) {\n\t\t\t\tthis.processElement(part.rootElement);\n\t\t\t\tthis.usedHederFooterParts.push(part.path);\n\t\t\t}\n\t\t\tthis.renderElements([part.rootElement], into);\n\t\t\tthis.currentPart = null;\n\t\t}\n\t}\n\n\tisPageBreakElement(elem: OpenXmlElement): boolean {\n\t\tif (elem.type != DomType.Break)\n\t\t\treturn false;\n\n\t\tif ((elem as WmlBreak).break == \"lastRenderedPageBreak\")\n\t\t\treturn !this.options.ignoreLastRenderedPageBreak;\n\n\t\treturn (elem as WmlBreak).break == \"page\";\n\t}\n\n\tsplitBySection(elements: OpenXmlElement[]): { sectProps: SectionProperties, elements: OpenXmlElement[] }[] {\n\t\tvar current = { sectProps: null, elements: [] };\n\t\tvar result = [current];\n\n\t\tfor (let elem of elements) {\n\t\t\tif (elem.type == DomType.Paragraph) {\n\t\t\t\tconst s = this.findStyle((elem as WmlParagraph).styleName);\n\n\t\t\t\tif (s?.paragraphProps?.pageBreakBefore) {\n\t\t\t\t\tcurrent.sectProps = sectProps;\n\t\t\t\t\tcurrent = { sectProps: null, elements: [] };\n\t\t\t\t\tresult.push(current);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcurrent.elements.push(elem);\n\n\t\t\tif (elem.type == DomType.Paragraph) {\n\t\t\t\tconst p = elem as WmlParagraph;\n\n\t\t\t\tvar sectProps = p.sectionProps;\n\t\t\t\tvar pBreakIndex = -1;\n\t\t\t\tvar rBreakIndex = -1;\n\n\t\t\t\tif (this.options.breakPages && p.children) {\n\t\t\t\t\tpBreakIndex = p.children.findIndex(r => {\n\t\t\t\t\t\trBreakIndex = r.children?.findIndex(this.isPageBreakElement.bind(this)) ?? -1;\n\t\t\t\t\t\treturn rBreakIndex != -1;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (sectProps || pBreakIndex != -1) {\n\t\t\t\t\tcurrent.sectProps = sectProps;\n\t\t\t\t\tcurrent = { sectProps: null, elements: [] };\n\t\t\t\t\tresult.push(current);\n\t\t\t\t}\n\n\t\t\t\tif (pBreakIndex != -1) {\n\t\t\t\t\tlet breakRun = p.children[pBreakIndex];\n\t\t\t\t\tlet splitRun = rBreakIndex < breakRun.children.length - 1;\n\n\t\t\t\t\tif (pBreakIndex < p.children.length - 1 || splitRun) {\n\t\t\t\t\t\tvar children = elem.children;\n\t\t\t\t\t\tvar newParagraph = { ...elem, children: children.slice(pBreakIndex) };\n\t\t\t\t\t\telem.children = children.slice(0, pBreakIndex);\n\t\t\t\t\t\tcurrent.elements.push(newParagraph);\n\n\t\t\t\t\t\tif (splitRun) {\n\t\t\t\t\t\t\tlet runChildren = breakRun.children;\n\t\t\t\t\t\t\tlet newRun = { ...breakRun, children: runChildren.slice(0, rBreakIndex) };\n\t\t\t\t\t\t\telem.children.push(newRun);\n\t\t\t\t\t\t\tbreakRun.children = runChildren.slice(rBreakIndex);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet currentSectProps = null;\n\n\t\tfor (let i = result.length - 1; i >= 0; i--) {\n\t\t\tif (result[i].sectProps == null) {\n\t\t\t\tresult[i].sectProps = currentSectProps;\n\t\t\t} else {\n\t\t\t\tcurrentSectProps = result[i].sectProps\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\trenderWrapper(children: HTMLElement[]) {\n\t\treturn this.createElement(\"div\", { className: `${this.className}-wrapper` }, children);\n\t}\n\n\trenderDefaultStyle() {\n\t\tvar c = this.className;\n\t\tvar styleText = `\n.${c}-wrapper { background: gray; padding: 30px; padding-bottom: 0px; display: flex; flex-flow: column; align-items: center; } \n.${c}-wrapper>section.${c} { background: white; box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); margin-bottom: 30px; }\n.${c} { color: black; }\nsection.${c} { box-sizing: border-box; display: flex; flex-flow: column nowrap; position: relative; overflow: hidden; }\nsection.${c}>article { margin-bottom: auto; }\n.${c} table { border-collapse: collapse; }\n.${c} table td, .${c} table th { vertical-align: top; }\n.${c} p { margin: 0pt; min-height: 1em; }\n.${c} span { white-space: pre-wrap; overflow-wrap: break-word; }\n.${c} a { color: inherit; text-decoration: inherit; }\n.${c}-math { display: inline-block; vertical-align: middle; }\n.${c}-mfrac { display: inline-flex; flex-flow: column nowrap; }\n.${c}-mfrac .${c}-mrow { text-align: center; line-height: 1; }\n.${c}-mfrac .${c}-mrow:first-child { border-bottom: 1px solid currentColor; }\n`;\n\n\t\treturn createStyleElement(styleText);\n\t}\n\n\t// renderNumbering2(numberingPart: NumberingPartProperties, container: HTMLElement): HTMLElement {\n\t//     let css = \"\";\n\t//     const numberingMap = keyBy(numberingPart.abstractNumberings, x => x.id);\n\t//     const bulletMap = keyBy(numberingPart.bulletPictures, x => x.id);\n\t//     const topCounters = [];\n\n\t//     for(let num of numberingPart.numberings) {\n\t//         const absNum = numberingMap[num.abstractId];\n\n\t//         for(let lvl of absNum.levels) {\n\t//             const className = this.numberingClass(num.id, lvl.level);\n\t//             let listStyleType = \"none\";\n\n\t//             if(lvl.text && lvl.format == 'decimal') {\n\t//                 const counter = this.numberingCounter(num.id, lvl.level);\n\n\t//                 if (lvl.level > 0) {\n\t//                     css += this.styleToString(`p.${this.numberingClass(num.id, lvl.level - 1)}`, {\n\t//                         \"counter-reset\": counter\n\t//                     });\n\t//                 } else {\n\t//                     topCounters.push(counter);\n\t//                 }\n\n\t//                 css += this.styleToString(`p.${className}:before`, {\n\t//                     \"content\": this.levelTextToContent(lvl.text, num.id),\n\t//                     \"counter-increment\": counter\n\t//                 });\n\t//             } else if(lvl.bulletPictureId) {\n\t//                 let pict = bulletMap[lvl.bulletPictureId];\n\t//                 let variable = `--${this.className}-${pict.referenceId}`.toLowerCase();\n\n\t//                 css += this.styleToString(`p.${className}:before`, {\n\t//                     \"content\": \"' '\",\n\t//                     \"display\": \"inline-block\",\n\t//                     \"background\": `var(${variable})`\n\t//                 }, pict.style);\n\n\t//                 this.document.loadNumberingImage(pict.referenceId).then(data => {\n\t//                     var text = `.${this.className}-wrapper { ${variable}: url(${data}) }`;\n\t//                     container.appendChild(createStyleElement(text));\n\t//                 });\n\t//             } else {\n\t//                 listStyleType = this.numFormatToCssValue(lvl.format);\n\t//             }\n\n\t//             css += this.styleToString(`p.${className}`, {\n\t//                 \"display\": \"list-item\",\n\t//                 \"list-style-position\": \"inside\",\n\t//                 \"list-style-type\": listStyleType,\n\t//                 //TODO\n\t//                 //...num.style\n\t//             });\n\t//         }\n\t//     }\n\n\t//     if (topCounters.length > 0) {\n\t//         css += this.styleToString(`.${this.className}-wrapper`, {\n\t//             \"counter-reset\": topCounters.join(\" \")\n\t//         });\n\t//     }\n\n\t//     return createStyleElement(css);\n\t// }\n\n\trenderNumbering(numberings: IDomNumbering[], styleContainer: HTMLElement) {\n\t\tvar styleText = \"\";\n\t\tvar rootCounters = [];\n\n\t\tfor (var num of numberings) {\n\t\t\tvar selector = `p.${this.numberingClass(num.id, num.level)}`;\n\t\t\tvar listStyleType = \"none\";\n\n\t\t\tif (num.bullet) {\n\t\t\t\tlet valiable = `--${this.className}-${num.bullet.src}`.toLowerCase();\n\n\t\t\t\tstyleText += this.styleToString(`${selector}:before`, {\n\t\t\t\t\t\"content\": \"' '\",\n\t\t\t\t\t\"display\": \"inline-block\",\n\t\t\t\t\t\"background\": `var(${valiable})`\n\t\t\t\t}, num.bullet.style);\n\n\t\t\t\tthis.document.loadNumberingImage(num.bullet.src).then(data => {\n\t\t\t\t\tvar text = `.${this.className}-wrapper { ${valiable}: url(${data}) }`;\n\t\t\t\t\tstyleContainer.appendChild(createStyleElement(text));\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if (num.levelText) {\n\t\t\t\tlet counter = this.numberingCounter(num.id, num.level);\n\n\t\t\t\tif (num.level > 0) {\n\t\t\t\t\tstyleText += this.styleToString(`p.${this.numberingClass(num.id, num.level - 1)}`, {\n\t\t\t\t\t\t\"counter-reset\": counter\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\trootCounters.push(counter);\n\t\t\t\t}\n\n\t\t\t\tstyleText += this.styleToString(`${selector}:before`, {\n\t\t\t\t\t\"content\": this.levelTextToContent(num.levelText, num.suff, num.id, this.numFormatToCssValue(num.format)),\n\t\t\t\t\t\"counter-increment\": counter,\n\t\t\t\t\t...num.rStyle,\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlistStyleType = this.numFormatToCssValue(num.format);\n\t\t\t}\n\n\t\t\tstyleText += this.styleToString(selector, {\n\t\t\t\t\"display\": \"list-item\",\n\t\t\t\t\"list-style-position\": \"inside\",\n\t\t\t\t\"list-style-type\": listStyleType,\n\t\t\t\t...num.pStyle\n\t\t\t});\n\t\t}\n\n\t\tif (rootCounters.length > 0) {\n\t\t\tstyleText += this.styleToString(`.${this.className}-wrapper`, {\n\t\t\t\t\"counter-reset\": rootCounters.join(\" \")\n\t\t\t});\n\t\t}\n\n\t\treturn createStyleElement(styleText);\n\t}\n\n\trenderStyles(styles: IDomStyle[]): HTMLElement {\n\t\tvar styleText = \"\";\n\t\tconst stylesMap = this.styleMap;\n\t\tconst defautStyles = keyBy(styles.filter(s => s.isDefault), s => s.target);\n\n\t\tfor (const style of styles) {\n\t\t\tvar subStyles = style.styles;\n\n\t\t\tif (style.linked) {\n\t\t\t\tvar linkedStyle = style.linked && stylesMap[style.linked];\n\n\t\t\t\tif (linkedStyle)\n\t\t\t\t\tsubStyles = subStyles.concat(linkedStyle.styles);\n\t\t\t\telse if (this.options.debug)\n\t\t\t\t\tconsole.warn(`Can't find linked style ${style.linked}`);\n\t\t\t}\n\n\t\t\tfor (const subStyle of subStyles) {\n\t\t\t\t//TODO temporary disable modificators until test it well\n\t\t\t\tvar selector = `${style.target ?? ''}.${style.cssName}`; //${subStyle.mod ?? ''} \n\n\t\t\t\tif (style.target != subStyle.target)\n\t\t\t\t\tselector += ` ${subStyle.target}`;\n\n\t\t\t\tif (defautStyles[style.target] == style)\n\t\t\t\t\tselector = `.${this.className} ${style.target}, ` + selector;\n\n\t\t\t\tstyleText += this.styleToString(selector, subStyle.values);\n\t\t\t}\n\t\t}\n\n\t\treturn createStyleElement(styleText);\n\t}\n\n\trenderNotes(noteIds: string[], notesMap: Record<string, WmlBaseNote>, into: HTMLElement) {\n\t\tvar notes = noteIds.map(id => notesMap[id]).filter(x => x);\n\n\t\tif (notes.length > 0) {\n\t\t\tvar result = this.createElement(\"ol\", null, this.renderElements(notes));\n\t\t\tinto.appendChild(result);\n\t\t}\n\t}\n\n\trenderElement(elem: OpenXmlElement): Node {\n\t\tswitch (elem.type) {\n\t\t\tcase DomType.Paragraph:\n\t\t\t\treturn this.renderParagraph(elem as WmlParagraph);\n\n\t\t\tcase DomType.BookmarkStart:\n\t\t\t\treturn this.renderBookmarkStart(elem as WmlBookmarkStart);\n\n\t\t\tcase DomType.BookmarkEnd:\n\t\t\t\treturn null; //ignore bookmark end\n\n\t\t\tcase DomType.Run:\n\t\t\t\treturn this.renderRun(elem as WmlRun);\n\n\t\t\tcase DomType.Table:\n\t\t\t\treturn this.renderTable(elem);\n\n\t\t\tcase DomType.Row:\n\t\t\t\treturn this.renderTableRow(elem);\n\n\t\t\tcase DomType.Cell:\n\t\t\t\treturn this.renderTableCell(elem);\n\n\t\t\tcase DomType.Hyperlink:\n\t\t\t\treturn this.renderHyperlink(elem);\n\n\t\t\tcase DomType.Drawing:\n\t\t\t\treturn this.renderDrawing(elem);\n\n\t\t\tcase DomType.Image:\n\t\t\t\treturn this.renderImage(elem as IDomImage);\n\n\t\t\tcase DomType.Text:\n\t\t\t\treturn this.renderText(elem as WmlText);\n\n\t\t\tcase DomType.Tab:\n\t\t\t\treturn this.renderTab(elem);\n\n\t\t\tcase DomType.Symbol:\n\t\t\t\treturn this.renderSymbol(elem as WmlSymbol);\n\n\t\t\tcase DomType.Break:\n\t\t\t\treturn this.renderBreak(elem as WmlBreak);\n\n\t\t\tcase DomType.Footer:\n\t\t\t\treturn this.renderContainer(elem, \"footer\");\n\n\t\t\tcase DomType.Header:\n\t\t\t\treturn this.renderContainer(elem, \"header\");\n\n\t\t\tcase DomType.Footnote:\n\t\t\tcase DomType.Endnote:\n\t\t\t\treturn this.renderContainer(elem, \"li\");\n\n\t\t\tcase DomType.FootnoteReference:\n\t\t\t\treturn this.renderFootnoteReference(elem as WmlNoteReference);\n\n\t\t\tcase DomType.EndnoteReference:\n\t\t\t\treturn this.renderEndnoteReference(elem as WmlNoteReference);\n\n\t\t\tcase DomType.NoBreakHyphen:\n\t\t\t\treturn this.createElement(\"wbr\");\n\n\t\t\tcase DomType.VmlPicture:\n\t\t\t\treturn this.renderVmlPicture(elem);\n\n\t\t\tcase DomType.VmlShape:\n\t\t\t\treturn this.renderVmlShape(elem as VmlShape);\n\n\t\t\tcase DomType.MmlMath:\n\t\t\t\treturn this.renderContainer(elem, \"div\", { className: `${this.className}-math` });\n\n\t\t\tcase DomType.MmlFraction:\n\t\t\t\treturn this.renderContainer(elem, \"div\", { className: `${this.className}-mfrac` });\n\n\t\t\tcase DomType.MmlNumerator:\n\t\t\tcase DomType.MmlDenominator:\n\t\t\t\treturn this.renderContainer(elem, \"div\", { className: `${this.className}-mrow` });\n\t\t}\n\n\t\treturn null;\n\t}\n\n\trenderChildren(elem: OpenXmlElement, into?: Element): Node[] {\n\t\treturn this.renderElements(elem.children, into);\n\t}\n\n\trenderElements(elems: OpenXmlElement[], into?: Element): Node[] {\n\t\tif (elems == null)\n\t\t\treturn null;\n\n\t\tvar result = elems.map(e => this.renderElement(e)).filter(e => e != null);\n\n\t\tif (into)\n\t\t\tappendChildren(into, result);\n\n\t\treturn result;\n\t}\n\n\trenderContainer(elem: OpenXmlElement, tagName: keyof HTMLElementTagNameMap, props?: Record<string, any>) {\n\t\treturn this.createElement(tagName, props, this.renderChildren(elem));\n\t}\n\n\trenderParagraph(elem: WmlParagraph) {\n\t\tvar result = this.createElement(\"p\");\n\n\t\tconst style = this.findStyle(elem.styleName);\n\t\telem.tabs ??= style?.paragraphProps?.tabs;  //TODO\n\n\t\tthis.renderClass(elem, result);\n\t\tthis.renderChildren(elem, result);\n\t\tthis.renderStyleValues(elem.cssStyle, result);\n\t\tthis.renderCommonProperties(result.style, elem);\n\n\t\tconst numbering = elem.numbering ?? style?.paragraphProps?.numbering;\n\n\t\tif (numbering) {\n\t\t\tresult.classList.add(this.numberingClass(numbering.id, numbering.level));\n\t\t}\n\n\t\treturn result;\n\t}\n\n\trenderRunProperties(style: any, props: RunProperties) {\n\t\tthis.renderCommonProperties(style, props);\n\t}\n\n\trenderCommonProperties(style: any, props: CommonProperties) {\n\t\tif (props == null)\n\t\t\treturn;\n\n\t\tif (props.color) {\n\t\t\tstyle[\"color\"] = props.color;\n\t\t}\n\n\t\tif (props.fontSize) {\n\t\t\tstyle[\"font-size\"] = props.fontSize;\n\t\t}\n\t}\n\n\trenderHyperlink(elem: WmlHyperlink) {\n\t\tvar result = this.createElement(\"a\");\n\n\t\tthis.renderChildren(elem, result);\n\t\tthis.renderStyleValues(elem.cssStyle, result);\n\n\t\tif (elem.href) {\n\t\t\tresult.href = elem.href;\n\t\t} else if(elem.id) {\n\t\t\tconst rel = this.document.documentPart.rels\n\t\t\t\t.find(it => it.id == elem.id && it.targetMode === \"External\");\n\t\t\tresult.href = rel?.target;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\trenderDrawing(elem: OpenXmlElement) {\n\t\tvar result = this.createElement(\"div\");\n\n\t\tresult.style.display = \"inline-block\";\n\t\tresult.style.position = \"relative\";\n\t\tresult.style.textIndent = \"0px\";\n\n\t\tthis.renderChildren(elem, result);\n\t\tthis.renderStyleValues(elem.cssStyle, result);\n\n\t\treturn result;\n\t}\n\n\trenderImage(elem: IDomImage) {\n\t\tlet result = this.createElement(\"img\");\n\n\t\tthis.renderStyleValues(elem.cssStyle, result);\n\n\t\tif (this.document) {\n\t\t\tthis.document.loadDocumentImage(elem.src, this.currentPart).then(x => {\n\t\t\t\tresult.src = x;\n\t\t\t});\n\t\t}\n\n\t\treturn result;\n\t}\n\n\trenderText(elem: WmlText) {\n\t\treturn this.htmlDocument.createTextNode(elem.text);\n\t}\n\n\trenderBreak(elem: WmlBreak) {\n\t\tif (elem.break == \"textWrapping\") {\n\t\t\treturn this.createElement(\"br\");\n\t\t}\n\n\t\treturn null;\n\t}\n\n\trenderSymbol(elem: WmlSymbol) {\n\t\tvar span = this.createElement(\"span\");\n\t\tspan.style.fontFamily = elem.font;\n\t\tspan.innerHTML = `&#x${elem.char};`\n\t\treturn span;\n\t}\n\n\trenderFootnoteReference(elem: WmlNoteReference) {\n\t\tvar result = this.createElement(\"sup\");\n\t\tthis.currentFootnoteIds.push(elem.id);\n\t\tresult.textContent = `${this.currentFootnoteIds.length}`;\n\t\treturn result;\n\t}\n\n\trenderEndnoteReference(elem: WmlNoteReference) {\n\t\tvar result = this.createElement(\"sup\");\n\t\tthis.currentEndnoteIds.push(elem.id);\n\t\tresult.textContent = `${this.currentEndnoteIds.length}`;\n\t\treturn result;\n\t}\n\n\trenderTab(elem: OpenXmlElement) {\n\t\tvar tabSpan = this.createElement(\"span\");\n\n\t\ttabSpan.innerHTML = \"&emsp;\";//\"&nbsp;\";\n\n\t\tif (this.options.experimental) {\n\t\t\ttabSpan.className = this.tabStopClass();\n\t\t\tvar stops = findParent<WmlParagraph>(elem, DomType.Paragraph)?.tabs;\n\t\t\tthis.currentTabs.push({ stops, span: tabSpan });\n\t\t}\n\n\t\treturn tabSpan;\n\t}\n\n\trenderBookmarkStart(elem: WmlBookmarkStart): HTMLElement {\n\t\tvar result = this.createElement(\"span\");\n\t\tresult.id = elem.name;\n\t\treturn result;\n\t}\n\n\trenderRun(elem: WmlRun) {\n\t\tif (elem.fieldRun)\n\t\t\treturn null;\n\n\t\tconst result = this.createElement(\"span\");\n\n\t\tif (elem.id)\n\t\t\tresult.id = elem.id;\n\n\t\tthis.renderClass(elem, result);\n\t\tthis.renderStyleValues(elem.cssStyle, result);\n\n\t\tif (elem.verticalAlign) {\n\t\t\tconst wrapper = this.createElement(elem.verticalAlign as any);\n\t\t\tthis.renderChildren(elem, wrapper);\n\t\t\tresult.appendChild(wrapper);\n\t\t}\n\t\telse {\n\t\t\tthis.renderChildren(elem, result);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\trenderTable(elem: WmlTable) {\n\t\tlet result = this.createElement(\"table\");\n\n\t\tthis.tableCellPositions.push(this.currentCellPosition);\n\t\tthis.tableVerticalMerges.push(this.currentVerticalMerge);\n\t\tthis.currentVerticalMerge = {};\n\t\tthis.currentCellPosition = { col: 0, row: 0 };\n\n\t\tif (elem.columns)\n\t\t\tresult.appendChild(this.renderTableColumns(elem.columns));\n\n\t\tthis.renderClass(elem, result);\n\t\tthis.renderChildren(elem, result);\n\t\tthis.renderStyleValues(elem.cssStyle, result);\n\n\t\tthis.currentVerticalMerge = this.tableVerticalMerges.pop();\n\t\tthis.currentCellPosition = this.tableCellPositions.pop();\n\n\t\treturn result;\n\t}\n\n\trenderTableColumns(columns: WmlTableColumn[]) {\n\t\tlet result = this.createElement(\"colgroup\");\n\n\t\tfor (let col of columns) {\n\t\t\tlet colElem = this.createElement(\"col\");\n\n\t\t\tif (col.width)\n\t\t\t\tcolElem.style.width = col.width;\n\n\t\t\tresult.appendChild(colElem);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\trenderTableRow(elem: OpenXmlElement) {\n\t\tlet result = this.createElement(\"tr\");\n\n\t\tthis.currentCellPosition.col = 0;\n\n\t\tthis.renderClass(elem, result);\n\t\tthis.renderChildren(elem, result);\n\t\tthis.renderStyleValues(elem.cssStyle, result);\n\n\t\tthis.currentCellPosition.row++;\n\n\t\treturn result;\n\t}\n\n\trenderTableCell(elem: WmlTableCell) {\n\t\tlet result = this.createElement(\"td\");\n\n\t\tif (elem.verticalMerge) {\n\t\t\tconst key = this.currentCellPosition.col;\n\n\t\t\tif (elem.verticalMerge == \"restart\") {\n\t\t\t\tthis.currentVerticalMerge[key] = result;\n\t\t\t\tresult.rowSpan = 1;\n\t\t\t} else if (this.currentVerticalMerge[key]) {\n\t\t\t\tthis.currentVerticalMerge[key].rowSpan += 1;\n\t\t\t\tresult.style.display = \"none\";\n\t\t\t}\n\t\t}\n\n\t\tthis.renderClass(elem, result);\n\t\tthis.renderChildren(elem, result);\n\t\tthis.renderStyleValues(elem.cssStyle, result);\n\n\t\tif (elem.span)\n\t\t\tresult.colSpan = elem.span;\n\n\t\tthis.currentCellPosition.col++;\n\n\t\treturn result;\n\t}\n\n\trenderVmlPicture(elem: OpenXmlElement) {\n\t\tvar result = createSvgElement(\"svg\");\n\t\tthis.renderChildren(elem, result);\n\n\t\tsetTimeout(() => {\n\t\t\tconst bb = result.getBBox();\n\n\t\t\tresult.setAttribute(\"width\", `${Math.round(bb.width)}`);\n\t\t\tresult.setAttribute(\"height\", `${Math.round(bb.height)}`);\n\t\t});\n\n\t\treturn result;\n\t}\n\n\trenderVmlShape(elem: VmlShape) {\n\t\tif (elem.imagedata) {\n\t\t\tconst image = createSvgElement(\"image\");\n\n\t\t\timage.setAttribute(\"style\", elem.cssStyleText);\n\n\t\t\tif (this.document) {\n\t\t\t\tthis.document.loadDocumentImage(elem.imagedata.id, this.currentPart).then(x => {\n\t\t\t\t\timage.setAttribute(\"href\", x);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn image;\n\t\t}\n\t}\n\n\trenderStyleValues(style: Record<string, string>, ouput: HTMLElement) {\n\t\tObject.assign(ouput.style, style);\n\t}\n\n\trenderClass(input: OpenXmlElement, ouput: HTMLElement) {\n\t\tif (input.className)\n\t\t\touput.className = input.className;\n\n\t\tif (input.styleName)\n\t\t\touput.classList.add(this.processStyleName(input.styleName));\n\t}\n\n\tfindStyle(styleName: string) {\n\t\treturn styleName && this.styleMap?.[styleName];\n\t}\n\n\tnumberingClass(id: string, lvl: number) {\n\t\treturn `${this.className}-num-${id}-${lvl}`;\n\t}\n\n\ttabStopClass() {\n\t\treturn `${this.className}-tab-stop`;\n\t}\n\n\tstyleToString(selectors: string, values: Record<string, string>, cssText: string = null) {\n\t\tlet result = `${selectors} {\\r\\n`;\n\n\t\tfor (const key in values) {\n\t\t\tresult += `  ${key}: ${values[key]};\\r\\n`;\n\t\t}\n\n\t\tif (cssText)\n\t\t\tresult += cssText;\n\n\t\treturn result + \"}\\r\\n\";\n\t}\n\n\tnumberingCounter(id: string, lvl: number) {\n\t\treturn `${this.className}-num-${id}-${lvl}`;\n\t}\n\n\tlevelTextToContent(text: string, suff: string, id: string, numformat: string) {\n\t\tconst suffMap = {\n\t\t\t\"tab\": \"\\\\9\",\n\t\t\t\"space\": \"\\\\a0\",\n\t\t};\n\n\t\tvar result = text.replace(/%\\d*/g, s => {\n\t\t\tlet lvl = parseInt(s.substring(1), 10) - 1;\n\t\t\treturn `\"counter(${this.numberingCounter(id, lvl)}, ${numformat})\"`;\n\t\t});\n\n\t\treturn `\"${result}${suffMap[suff] ?? \"\"}\"`;\n\t}\n\n\tnumFormatToCssValue(format: string) {\n\t\tvar mapping = {\n\t\t\t\"none\": \"none\",\n\t\t\t\"bullet\": \"disc\",\n\t\t\t\"decimal\": \"decimal\",\n\t\t\t\"lowerLetter\": \"lower-alpha\",\n\t\t\t\"upperLetter\": \"upper-alpha\",\n\t\t\t\"lowerRoman\": \"lower-roman\",\n\t\t\t\"upperRoman\": \"upper-roman\",\n\t\t};\n\n\t\treturn mapping[format] || format;\n\t}\n\n\trefreshTabStops() {\n\t\tif (!this.options.experimental)\n\t\t\treturn;\n\n\t\tclearTimeout(this.tabsTimeout);\n\n\t\tthis.tabsTimeout = setTimeout(() => {\n\t\t\tconst pixelToPoint = computePixelToPoint();\n\n\t\t\tfor (let tab of this.currentTabs) {\n\t\t\t\tupdateTabStop(tab.span, tab.stops, this.defaultTabSize, pixelToPoint);\n\t\t\t}\n\t\t}, 500);\n\t}\n\n\tcreateElement = createElement;\n}\n\n\nfunction createElement<T extends keyof HTMLElementTagNameMap>(\n\ttagName: T,\n\tprops?: Partial<Record<keyof HTMLElementTagNameMap[T], any>>,\n\tchildren?: Node[]\n): HTMLElementTagNameMap[T] {\n\treturn createElementNS(undefined, tagName, props, children);\n}\n\nfunction createSvgElement<T extends keyof SVGElementTagNameMap>(\n\ttagName: T,\n\tprops?: Partial<Record<keyof SVGElementTagNameMap[T], any>>,\n\tchildren?: Node[]\n): SVGElementTagNameMap[T] {\n\treturn createElementNS(ns.svg, tagName, props, children);\n}\n\nfunction createElementNS(ns: string, tagName: string, props?: Partial<Record<any, any>>, children?: Node[]): any {\n\tvar result = ns ? document.createElementNS(ns, tagName) : document.createElement(tagName);\n\tObject.assign(result, props);\n\tchildren && appendChildren(result, children);\n\treturn result;\n}\n\nfunction removeAllElements(elem: HTMLElement) {\n\telem.innerHTML = '';\n}\n\nfunction appendChildren(elem: Element, children: Node[]) {\n\tchildren.forEach(c => elem.appendChild(c));\n}\n\nfunction createStyleElement(cssText: string) {\n\treturn createElement(\"style\", { innerHTML: cssText });\n}\n\nfunction appendComment(elem: HTMLElement, comment: string) {\n\telem.appendChild(document.createComment(comment));\n}\n\nfunction findParent<T extends OpenXmlElement>(elem: OpenXmlElement, type: DomType): T {\n\tvar parent = elem.parent;\n\n\twhile (parent != null && parent.type != type)\n\t\tparent = parent.parent;\n\n\treturn <T>parent;\n}","import { Length } from \"./document/common\";\nimport { ParagraphTab } from \"./document/paragraph\";\n\ninterface TabStop {\n\tpos: number;\n\tleader: string;\n\tstyle: string;\n}\n\nconst defaultTab: TabStop = { pos: 0, leader: \"none\", style: \"left\" };\nconst maxTabs = 50;\n\nexport function computePixelToPoint(container: HTMLElement = document.body) {\n\tconst temp = document.createElement(\"div\");\n\ttemp.style.width = '100pt';\n\t\n\tcontainer.appendChild(temp);\n\tconst result = 100 / temp.offsetWidth;\n\tcontainer.removeChild(temp);\n\n\treturn result\n}\n\nexport function updateTabStop(elem: HTMLElement, tabs: ParagraphTab[], defaultTabSize: Length, pixelToPoint: number = 72 / 96) {\n    const p = elem.closest(\"p\");\n\n    const ebb = elem.getBoundingClientRect();\n    const pbb = p.getBoundingClientRect();\n    const pcs = getComputedStyle(p);\n\n\tconst tabStops = tabs?.length > 0 ? tabs.map(t => ({\n\t\tpos: lengthToPoint(t.position),\n\t\tleader: t.leader,\n\t\tstyle: t.style\n\t})).sort((a, b) => a.pos - b.pos) : [defaultTab];\n\n\tconst lastTab = tabStops[tabStops.length - 1];\n\tconst pWidthPt = pbb.width * pixelToPoint;\n\tconst size = lengthToPoint(defaultTabSize);\n    let pos = lastTab.pos + size;\n\n    if (pos < pWidthPt) {\n        for (; pos < pWidthPt && tabStops.length < maxTabs; pos += size) {\n            tabStops.push({ ...defaultTab, pos: pos });\n        }\n    }\n\n    const marginLeft = parseFloat(pcs.marginLeft);\n    const pOffset = pbb.left + marginLeft;\n    const left = (ebb.left - pOffset) * pixelToPoint;\n    const tab = tabStops.find(t => t.style != \"clear\" && t.pos > left);\n\n    if(tab == null)\n        return;\n\n    let width: number = 1;\n\n    if (tab.style == \"right\" || tab.style == \"center\") {\n\t\tconst tabStops = Array.from(p.querySelectorAll(`.${elem.className}`));\n\t\tconst nextIdx = tabStops.indexOf(elem) + 1;\n        const range = document.createRange();\n        range.setStart(elem, 1);\n\n\t\tif (nextIdx < tabStops.length) {\n\t\t\trange.setEndBefore(tabStops[nextIdx]);\n\t\t} else {\n\t\t\trange.setEndAfter(p);\n\t\t}\n\n\t\tconst mul = tab.style == \"center\" ? 0.5 : 1;\n        const nextBB = range.getBoundingClientRect();\n\t\tconst offset = nextBB.left + mul * nextBB.width - (pbb.left - marginLeft);\n\n\t\twidth = tab.pos - offset * pixelToPoint;\n    } else {\n        width = tab.pos - left;\n    }\n\n    elem.innerHTML = \"&nbsp;\";\n    elem.style.textDecoration = \"inherit\";\n    elem.style.wordSpacing = `${width.toFixed(0)}pt`;\n\n    switch (tab.leader) {\n        case \"dot\":\n        case \"middleDot\":\n            elem.style.textDecoration = \"underline\";\n            elem.style.textDecorationStyle = \"dotted\";\n            break;\n\n        case \"hyphen\":\n        case \"heavy\":\n        case \"underscore\":\n            elem.style.textDecoration = \"underline\";\n            break;\n    }\n}\n\nfunction lengthToPoint(length: Length): number {\n\treturn parseFloat(length);\n}","import { DomType, OpenXmlElement } from \"../document/dom\";\n\nexport abstract class WmlBaseNote implements OpenXmlElement {\n    id: string;\n\ttype: DomType;\n\tnoteType: string;\n    children?: OpenXmlElement[] = [];\n    cssStyle?: Record<string, string> = {};\n    className?: string;\n    parent?: OpenXmlElement;\n}\n\nexport class WmlFootnote extends WmlBaseNote {\n\ttype = DomType.Footnote\n}\n\nexport class WmlEndnote extends WmlBaseNote {\n\ttype = DomType.Endnote\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\nimport { Part } from \"../common/part\";\nimport { DocumentParser } from \"../document-parser\";\nimport { WmlBaseNote, WmlEndnote, WmlFootnote } from \"./elements\";\n\nexport class BaseNotePart<T extends WmlBaseNote> extends Part {\n    protected _documentParser: DocumentParser;\n\n    notes: T[]\n\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\n        super(pkg, path);\n        this._documentParser = parser;\n    }\n}\n\nexport class FootnotesPart extends BaseNotePart<WmlFootnote> {\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\n        super(pkg, path, parser);\n    }\n\n    parseXml(root: Element) {\n        this.notes = this._documentParser.parseNotes(root, \"footnote\", WmlFootnote);\n    }\n}\n\nexport class EndnotesPart extends BaseNotePart<WmlEndnote> {\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\n        super(pkg, path, parser);\n    }\n\n    parseXml(root: Element) {\n        this.notes = this._documentParser.parseNotes(root, \"endnote\", WmlEndnote);\n    }\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\nimport { Part } from \"../common/part\";\nimport { DocumentParser } from \"../document-parser\";\nimport { IDomNumbering } from \"../document/dom\";\nimport { AbstractNumbering, Numbering, NumberingBulletPicture, NumberingPartProperties, parseNumberingPart } from \"./numbering\";\n\nexport class NumberingPart extends Part implements NumberingPartProperties {\n    private _documentParser: DocumentParser;\n\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\n        super(pkg, path);\n        this._documentParser = parser;\n    }\n\n    numberings: Numbering[];\n    abstractNumberings: AbstractNumbering[];\n    bulletPictures: NumberingBulletPicture[];\n    \n    domNumberings: IDomNumbering[];\n\n    parseXml(root: Element) {\n        Object.assign(this, parseNumberingPart(root, this._package.xmlParser));\n        this.domNumberings = this._documentParser.parseNumberingFile(root);  \n    }\n}","import { NumberingPicBullet } from \"../document/dom\";\nimport { ParagraphProperties, parseParagraphProperties } from \"../document/paragraph\";\nimport { parseRunProperties, RunProperties } from \"../document/run\";\nimport { XmlParser } from \"../parser/xml-parser\";\n\nexport interface NumberingPartProperties {\n    numberings: Numbering[];\n    abstractNumberings: AbstractNumbering[];\n    bulletPictures: NumberingBulletPicture[];\n}\n\nexport interface Numbering {\n    id: string;\n    abstractId: string;\n    overrides: NumberingLevelOverride[];\n}\n\nexport interface NumberingLevelOverride {\n    level: number;\n    start: number;\n    numberingLevel: NumberingLevel;\n}\n\nexport interface AbstractNumbering {\n    id: string;\n    name: string;\n    multiLevelType: \"singleLevel\" | \"multiLevel\" | \"hybridMultilevel\" | string;\n    levels: NumberingLevel[];\n    numberingStyleLink: string;\n    styleLink: string;\n}\n\nexport interface NumberingLevel {\n    level: number;\n    start: string;\n    restart: number;\n    format: 'lowerRoman' | 'lowerLetter' | string;\n    text: string;\n    justification: string;\n    bulletPictureId: string;\n    paragraphStyle: string;\n    paragraphProps: ParagraphProperties;\n    runProps: RunProperties;\n}\n\nexport interface NumberingBulletPicture {\n    id: string;\n    referenceId: string;\n    style: string;\n}\n\nexport function parseNumberingPart(elem: Element, xml: XmlParser): NumberingPartProperties {\n    let result: NumberingPartProperties = {\n        numberings: [],\n        abstractNumberings: [],\n        bulletPictures: []\n    }\n    \n    for (let e of xml.elements(elem)) {\n        switch (e.localName) {\n            case \"num\":\n                result.numberings.push(parseNumbering(e, xml));\n                break;\n            case \"abstractNum\":\n                result.abstractNumberings.push(parseAbstractNumbering(e, xml));\n                break;\n            case \"numPicBullet\":\n                result.bulletPictures.push(parseNumberingBulletPicture(e, xml));\n                break;\n        }\n    }\n\n    return result;\n}\n\nexport function parseNumbering(elem: Element, xml: XmlParser): Numbering {\n    let result = <Numbering>{\n        id: xml.attr(elem, 'numId'),\n        overrides: []\n    };\n\n    for (let e of xml.elements(elem)) {\n        switch (e.localName) {\n            case \"abstractNumId\":\n                result.abstractId = xml.attr(e, \"val\");\n                break;\n            case \"lvlOverride\":\n                result.overrides.push(parseNumberingLevelOverrride(e, xml));\n                break;\n        }\n    }\n\n    return result;\n}\n\nexport function parseAbstractNumbering(elem: Element, xml: XmlParser): AbstractNumbering {\n    let result = <AbstractNumbering>{\n        id: xml.attr(elem, 'abstractNumId'),\n        levels: []\n    };\n\n    for (let e of xml.elements(elem)) {\n        switch (e.localName) {\n            case \"name\":\n                result.name = xml.attr(e, \"val\");\n                break;\n            case \"multiLevelType\":\n                result.multiLevelType = xml.attr(e, \"val\");\n                break;\n            case \"numStyleLink\":\n                result.numberingStyleLink = xml.attr(e, \"val\");\n                break;\n            case \"styleLink\":\n                result.styleLink = xml.attr(e, \"val\");\n                break;\n            case \"lvl\":\n                result.levels.push(parseNumberingLevel(e, xml));\n                break;\n        }\n    }\n\n    return result;\n}\n\nexport function parseNumberingLevel(elem: Element, xml: XmlParser): NumberingLevel {\n    let result = <NumberingLevel>{\n        level: xml.intAttr(elem, 'ilvl')\n    };\n\n    for (let e of xml.elements(elem)) {\n        switch (e.localName) {\n            case \"start\":\n                result.start = xml.attr(e, \"val\");\n                break;\n            case \"lvlRestart\":\n                result.restart = xml.intAttr(e, \"val\");\n                break;\n            case \"numFmt\":\n                result.format = xml.attr(e, \"val\");\n                break;\n            case \"lvlText\":\n                result.text = xml.attr(e, \"val\");\n                break;\n            case \"lvlJc\":\n                result.justification = xml.attr(e, \"val\");\n                break;\n            case \"lvlPicBulletId\":\n                result.bulletPictureId = xml.attr(e, \"val\");\n                break;\n            case \"pStyle\":\n                result.paragraphStyle = xml.attr(e, \"val\");\n                break;\n            case \"pPr\":\n                result.paragraphProps = parseParagraphProperties(e, xml);\n                break;\n            case \"rPr\":\n                result.runProps = parseRunProperties(e, xml);\n                break;\n        }\n    }\n\n    return result;\n}\n\nexport function parseNumberingLevelOverrride(elem: Element, xml: XmlParser): NumberingLevelOverride {\n    let result = <NumberingLevelOverride>{\n        level: xml.intAttr(elem, 'ilvl')\n    };\n\n    for (let e of xml.elements(elem)) {\n        switch (e.localName) {\n            case \"startOverride\":\n                result.start = xml.intAttr(e, \"val\");\n                break;\n            case \"lvl\":\n                result.numberingLevel = parseNumberingLevel(e, xml);\n                break;\n        }\n    }\n\n    return result;\n}\n\nexport function parseNumberingBulletPicture(elem: Element, xml: XmlParser): NumberingBulletPicture {\n    //TODO\n    var pict = xml.element(elem, \"pict\");\n    var shape = pict && xml.element(pict, \"shape\");\n    var imagedata = shape && xml.element(shape, \"imagedata\");\n\n    return imagedata ? {\n        id: xml.attr(elem, \"numPicBulletId\"),\n        referenceId: xml.attr(imagedata, \"id\"),\n        style: xml.attr(shape, \"style\")\n    } : null;\n}","import { Length,  LengthUsage, LengthUsageType, convertLength, convertBoolean  } from \"../document/common\";\n\nexport function parseXmlString(xmlString: string, trimXmlDeclaration: boolean = false): Document {\n    if (trimXmlDeclaration)\n        xmlString = xmlString.replace(/<[?].*[?]>/, \"\");\n    \n    const result = new DOMParser().parseFromString(xmlString, \"application/xml\");  \n    const errorText = hasXmlParserError(result);\n\n    if (errorText)\n        throw new Error(errorText);\n\n    return result;\n}\n\nfunction hasXmlParserError(doc: Document) {\n    return doc.getElementsByTagName(\"parsererror\")[0]?.textContent;\n}\n\nexport function serializeXmlString(elem: Node): string {\n    return new XMLSerializer().serializeToString(elem);\n}\n\nexport class XmlParser {\n    elements(elem: Element, localName: string = null): Element[] {\n        const result = [];\n\n        for (let i = 0, l = elem.childNodes.length; i < l; i++) {\n            let c = elem.childNodes.item(i);\n\n            if (c.nodeType == 1 && (localName == null || (c as Element).localName == localName))\n                result.push(c);\n        }\n\n        return result;\n    }\n\n    element(elem: Element, localName: string): Element {\n        for (let i = 0, l = elem.childNodes.length; i < l; i++) {\n            let c = elem.childNodes.item(i);\n\n            if (c.nodeType == 1 && (c as Element).localName == localName)\n                return c as Element;\n        }\n\n        return null;\n    }\n\n    elementAttr(elem: Element, localName: string, attrLocalName: string): string {\n        var el = this.element(elem, localName);\n        return el ? this.attr(el, attrLocalName) : undefined;\n    }\n\n    attr(elem: Element, localName: string): string {\n        for (let i = 0, l = elem.attributes.length; i < l; i++) {\n            let a = elem.attributes.item(i);\n\n            if (a.localName == localName)\n                return a.value;\n        }\n\n        return null;\n    }\n\n    intAttr(node: Element, attrName: string, defaultValue: number = null): number {\n        var val = this.attr(node, attrName);\n        return val ? parseInt(val) : defaultValue;\n    }\n\n\thexAttr(node: Element, attrName: string, defaultValue: number = null): number {\n        var val = this.attr(node, attrName);\n        return val ? parseInt(val, 16) : defaultValue;\n    }\n\n    floatAttr(node: Element, attrName: string, defaultValue: number = null): number {\n        var val = this.attr(node, attrName);\n        return val ? parseFloat(val) : defaultValue;\n    }\n\n    boolAttr(node: Element, attrName: string, defaultValue: boolean = null) {\n        return convertBoolean(this.attr(node, attrName), defaultValue);\n    }\n\n    lengthAttr(node: Element, attrName: string, usage: LengthUsageType = LengthUsage.Dxa): Length {\n        return convertLength(this.attr(node, attrName), usage);\n    }\n}\n\nconst globalXmlParser = new XmlParser();\n\nexport default globalXmlParser;","import { OpenXmlPackage } from \"../common/open-xml-package\";\nimport { Part } from \"../common/part\";\nimport { WmlSettings, parseSettings } from \"./settings\";\n\nexport class SettingsPart extends Part {\n\tsettings: WmlSettings;\n\n\tconstructor(pkg: OpenXmlPackage, path: string) {\n\t\tsuper(pkg, path);\n\t}\n\n\tparseXml(root: Element) {\n\t\tthis.settings = parseSettings(root, this._package.xmlParser);\n\t}\n}","import { DocumentParser } from \"../document-parser\";\nimport { Length } from \"../document/common\";\nimport { XmlParser } from \"../parser/xml-parser\";\n\nexport interface WmlSettings {\n\tdefaultTabStop: Length;\n\tfootnoteProps: NoteProperties;\n\tendnoteProps: NoteProperties;\n\tautoHyphenation: boolean;\n}\n\nexport interface NoteProperties {\n\tnummeringFormat: string;\n\tdefaultNoteIds: string[];\n}\n\nexport function parseSettings(elem: Element, xml: XmlParser) {\n\tvar result = {} as WmlSettings; \n\n\tfor (let el of xml.elements(elem)) {\n\t\tswitch(el.localName) {\n\t\t\tcase \"defaultTabStop\": result.defaultTabStop = xml.lengthAttr(el, \"val\"); break;\n\t\t\tcase \"footnotePr\": result.footnoteProps = parseNoteProperties(el, xml); break;\n\t\t\tcase \"endnotePr\": result.endnoteProps = parseNoteProperties(el, xml); break;\n\t\t\tcase \"autoHyphenation\": result.autoHyphenation = xml.boolAttr(el, \"val\"); break;\n\t\t}\n\t}\n\n    return result;\n}\n\nexport function parseNoteProperties(elem: Element, xml: XmlParser) {\n\tvar result = {\n\t\tdefaultNoteIds: []\n\t} as NoteProperties; \n\n\tfor (let el of xml.elements(elem)) {\n\t\tswitch(el.localName) {\n\t\t\tcase \"numFmt\": \n\t\t\t\tresult.nummeringFormat = xml.attr(el, \"val\");\n\t\t\t\tbreak;\n\n\t\t\tcase \"footnote\": \n\t\t\tcase \"endnote\": \n\t\t\t\tresult.defaultNoteIds.push(xml.attr(el, \"id\"));\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n    return result;\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\nimport { Part } from \"../common/part\";\nimport { DocumentParser } from \"../document-parser\";\nimport { IDomStyle } from \"../document/style\";\n\nexport class StylesPart extends Part {\n    styles: IDomStyle[];\n\n    private _documentParser: DocumentParser;\n\n    constructor(pkg: OpenXmlPackage, path: string, parser: DocumentParser) {\n        super(pkg, path);\n        this._documentParser = parser;\n    }\n\n    parseXml(root: Element) {\n        this.styles = this._documentParser.parseStylesFile(root);     \n    }\n}","import { OpenXmlPackage } from \"../common/open-xml-package\";\nimport { Part } from \"../common/part\";\nimport { DmlTheme, parseTheme } from \"./theme\";\n\nexport class ThemePart extends Part {\n    theme: DmlTheme;\n\n    constructor(pkg: OpenXmlPackage, path: string) {\n        super(pkg, path);\n    }\n\n    parseXml(root: Element) {\n        this.theme = parseTheme(root, this._package.xmlParser);\n    }\n}","import { XmlParser } from \"../parser/xml-parser\";\n\nexport class DmlTheme {\n    colorScheme: DmlColorScheme;\n    fontScheme: DmlFontScheme;\n}\n\nexport interface DmlColorScheme {\n    name: string;\n    colors: Record<string, string>;\n}\n\nexport interface DmlFontScheme {\n    name: string;\n    majorFont: DmlFormInfo,\n    minorFont: DmlFormInfo\n}\n\nexport interface DmlFormInfo {\n    latinTypeface: string;\n    eaTypeface: string;\n    csTypeface: string;\n}\n\nexport function parseTheme(elem: Element, xml: XmlParser) {\n    var result = new DmlTheme();\n    var themeElements = xml.element(elem, \"themeElements\");\n\n    for (let el of xml.elements(themeElements)) {\n        switch(el.localName) {\n            case \"clrScheme\": result.colorScheme = parseColorScheme(el, xml); break;\n            case \"fontScheme\": result.fontScheme = parseFontScheme(el, xml); break;\n        }\n    }\n\n    return result;\n}\n\nexport function parseColorScheme(elem: Element, xml: XmlParser) {\n    var result: DmlColorScheme = { \n        name: xml.attr(elem, \"name\"),\n        colors: {}\n    };\n\n    for (let el of xml.elements(elem)) {\n        var srgbClr = xml.element(el, \"srgbClr\");\n        var sysClr = xml.element(el, \"sysClr\");\n\n        if (srgbClr) {\n            result.colors[el.localName] = xml.attr(srgbClr, \"val\");\n        }\n        else if (sysClr) {\n            result.colors[el.localName] = xml.attr(sysClr, \"lastClr\");\n        }\n    }\n\n    return result;\n}\n\nexport function parseFontScheme(elem: Element, xml: XmlParser) {\n    var result: DmlFontScheme = { \n        name: xml.attr(elem, \"name\"),\n    } as DmlFontScheme;\n\n    for (let el of xml.elements(elem)) {\n        switch (el.localName) {\n            case \"majorFont\": result.majorFont = parseFontInfo(el, xml); break;\n            case \"minorFont\": result.minorFont = parseFontInfo(el, xml); break;\n        }\n    }\n\n    return result;\n}\n\nexport function parseFontInfo(elem: Element, xml: XmlParser): DmlFormInfo {\n    return {\n        latinTypeface: xml.elementAttr(elem, \"latin\", \"typeface\"),\n        eaTypeface: xml.elementAttr(elem, \"ea\", \"typeface\"),\n        csTypeface: xml.elementAttr(elem, \"cs\", \"typeface\"),\n    };\n}","export function escapeClassName(className: string) {\n\treturn className?.replace(/[ .]+/g, '-').replace(/[&]+/g, 'and').toLowerCase();\n}\n\nexport function splitPath(path: string): [string, string] {\n    let si = path.lastIndexOf('/') + 1;\n    let folder = si == 0 ? \"\" : path.substring(0, si);\n    let fileName = si == 0 ? path : path.substring(si);\n\n    return [folder, fileName];\n}\n\nexport function resolvePath(path: string, base: string): string {\n    try {\n        const prefix = \"http://docx/\";\n        const url = new URL(path, prefix + base).toString();\n        return url.substring(prefix.length);\n    } catch {\n        return `${base}${path}`;\n    }\n}\n\nexport function keyBy<T = any>(array: T[], by: (x: T) => any): Record<any, T> {\n    return array.reduce((a, x) => {\n        a[by(x)] = x;\n        return a;\n    }, {});\n}\n\nexport function blobToBase64(blob: Blob): any {\n\treturn new Promise((resolve, _) => {\n\t\tconst reader = new FileReader();\n\t\treader.onloadend = () => resolve(reader.result);\n\t\treader.readAsDataURL(blob);\n\t});\n}\n\nexport function isObject(item) {\n    return (item && typeof item === 'object' && !Array.isArray(item));\n}\n\nexport function mergeDeep(target, ...sources) {\n    if (!sources.length) \n        return target;\n    \n    const source = sources.shift();\n\n    if (isObject(target) && isObject(source)) {\n        for (const key in source) {\n            if (isObject(source[key])) {\n                const val = target[key] ?? (target[key] = {});\n                mergeDeep(val, source[key]);\n            } else {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    return mergeDeep(target, ...sources);\n}","import { OutputType } from \"jszip\";\r\n\r\nimport { DocumentParser } from './document-parser';\r\nimport { Relationship, RelationshipTypes } from './common/relationship';\r\nimport { Part } from './common/part';\r\nimport { FontTablePart } from './font-table/font-table';\r\nimport { OpenXmlPackage } from './common/open-xml-package';\r\nimport { DocumentPart } from './document/document-part';\r\nimport { blobToBase64, resolvePath, splitPath } from './utils';\r\nimport { NumberingPart } from './numbering/numbering-part';\r\nimport { StylesPart } from './styles/styles-part';\r\nimport { FooterPart, HeaderPart } from \"./header-footer/parts\";\r\nimport { ExtendedPropsPart } from \"./document-props/extended-props-part\";\r\nimport { CorePropsPart } from \"./document-props/core-props-part\";\r\nimport { ThemePart } from \"./theme/theme-part\";\r\nimport { EndnotesPart, FootnotesPart } from \"./notes/parts\";\r\nimport { SettingsPart } from \"./settings/settings-part\";\r\nimport { CustomPropsPart } from \"./document-props/custom-props-part\";\r\n\r\nconst topLevelRels = [\r\n\t{ type: RelationshipTypes.OfficeDocument, target: \"word/document.xml\" },\r\n\t{ type: RelationshipTypes.ExtendedProperties, target: \"docProps/app.xml\" },\r\n\t{ type: RelationshipTypes.CoreProperties, target: \"docProps/core.xml\" },\r\n\t{ type: RelationshipTypes.CustomProperties, target: \"docProps/custom.xml\" },\r\n];\r\n\r\nexport class WordDocument {\r\n\tprivate _package: OpenXmlPackage;\r\n\tprivate _parser: DocumentParser;\r\n\tprivate _options: any;\r\n\r\n\trels: Relationship[];\r\n\tparts: Part[] = [];\r\n\tpartsMap: Record<string, Part> = {};\r\n\r\n\tdocumentPart: DocumentPart;\r\n\tfontTablePart: FontTablePart;\r\n\tnumberingPart: NumberingPart;\r\n\tstylesPart: StylesPart;\r\n\tfootnotesPart: FootnotesPart;\r\n\tendnotesPart: EndnotesPart;\r\n\tthemePart: ThemePart;\r\n\tcorePropsPart: CorePropsPart;\r\n\textendedPropsPart: ExtendedPropsPart;\r\n\tsettingsPart: SettingsPart;\r\n\r\n\tstatic load(blob, parser: DocumentParser, options: any): Promise<WordDocument> {\r\n\t\tvar d = new WordDocument();\r\n\r\n\t\td._options = options;\r\n\t\td._parser = parser;\r\n\r\n\t\treturn OpenXmlPackage.load(blob, options)\r\n\t\t\t.then(pkg => {\r\n\t\t\t\td._package = pkg;\r\n\r\n\t\t\t\treturn d._package.loadRelationships();\r\n\t\t\t}).then(rels => {\r\n\t\t\t\td.rels = rels;\r\n\r\n\t\t\t\tconst tasks = topLevelRels.map(rel => {\r\n\t\t\t\t\tconst r = rels.find(x => x.type === rel.type) ?? rel; //fallback                    \r\n\t\t\t\t\treturn d.loadRelationshipPart(r.target, r.type);\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn Promise.all(tasks);\r\n\t\t\t}).then(() => d);\r\n\t}\r\n\r\n\tsave(type = \"blob\"): Promise<any> {\r\n\t\treturn this._package.save(type);\r\n\t}\r\n\r\n\tprivate loadRelationshipPart(path: string, type: string): Promise<Part> {\r\n\t\tif (this.partsMap[path])\r\n\t\t\treturn Promise.resolve(this.partsMap[path]);\r\n\r\n\t\tif (!this._package.get(path))\r\n\t\t\treturn Promise.resolve(null);\r\n\r\n\t\tlet part: Part = null;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase RelationshipTypes.OfficeDocument:\r\n\t\t\t\tthis.documentPart = part = new DocumentPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.FontTable:\r\n\t\t\t\tthis.fontTablePart = part = new FontTablePart(this._package, path);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Numbering:\r\n\t\t\t\tthis.numberingPart = part = new NumberingPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Styles:\r\n\t\t\t\tthis.stylesPart = part = new StylesPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Theme:\r\n\t\t\t\tthis.themePart = part = new ThemePart(this._package, path);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Footnotes:\r\n\t\t\t\tthis.footnotesPart = part = new FootnotesPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Endnotes:\r\n\t\t\t\tthis.endnotesPart = part = new EndnotesPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Footer:\r\n\t\t\t\tpart = new FooterPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.Header:\r\n\t\t\t\tpart = new HeaderPart(this._package, path, this._parser);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.CoreProperties:\r\n\t\t\t\tthis.corePropsPart = part = new CorePropsPart(this._package, path);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.ExtendedProperties:\r\n\t\t\t\tthis.extendedPropsPart = part = new ExtendedPropsPart(this._package, path);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RelationshipTypes.CustomProperties:\r\n\t\t\t\tpart = new CustomPropsPart(this._package, path);\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase RelationshipTypes.Settings:\r\n\t\t\t\tthis.settingsPart = part = new SettingsPart(this._package, path);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (part == null)\r\n\t\t\treturn Promise.resolve(null);\r\n\r\n\t\tthis.partsMap[path] = part;\r\n\t\tthis.parts.push(part);\r\n\r\n\t\treturn part.load().then(() => {\r\n\t\t\tif (part.rels == null || part.rels.length == 0)\r\n\t\t\t\treturn part;\r\n\r\n\t\t\tconst [folder] = splitPath(part.path);\r\n\t\t\tconst rels = part.rels.map(rel => {\r\n\t\t\t\treturn this.loadRelationshipPart(resolvePath(rel.target, folder), rel.type)\r\n\t\t\t});\r\n\r\n\t\t\treturn Promise.all(rels).then(() => part);\r\n\t\t});\r\n\t}\r\n\r\n\tloadDocumentImage(id: string, part?: Part): PromiseLike<string> {\r\n\t\treturn this.loadResource(part ?? this.documentPart, id, \"blob\")\r\n\t\t\t.then(x => this.blobToURL(x));\r\n\t}\r\n\r\n\tloadNumberingImage(id: string): PromiseLike<string> {\r\n\t\treturn this.loadResource(this.numberingPart, id, \"blob\")\r\n\t\t\t.then(x => this.blobToURL(x));\r\n\t}\r\n\r\n\tloadFont(id: string, key: string): PromiseLike<string> {\r\n\t\treturn this.loadResource(this.fontTablePart, id, \"uint8array\")\r\n\t\t\t.then(x => x ? this.blobToURL(new Blob([deobfuscate(x, key)])) : x);\r\n\t}\r\n\r\n\tprivate blobToURL(blob: Blob): string | PromiseLike<string> {\r\n\t\tif (!blob)\r\n\t\t\treturn null;\r\n\r\n\t\tif (this._options.useBase64URL) {\r\n\t\t\treturn blobToBase64(blob);\r\n\t\t}\r\n\r\n\t\treturn URL.createObjectURL(blob);\r\n\t}\r\n\r\n\tfindPartByRelId(id: string, basePart: Part = null) {\r\n\t\tvar rel = (basePart.rels ?? this.rels).find(r => r.id == id);\r\n\t\tconst folder = basePart ? splitPath(basePart.path)[0] : '';\r\n\t\treturn rel ? this.partsMap[resolvePath(rel.target, folder)] : null;\r\n\t}\r\n\r\n\tgetPathById(part: Part, id: string): string {\r\n\t\tconst rel = part.rels.find(x => x.id == id);\r\n\t\tconst [folder] = splitPath(part.path);\r\n\t\treturn rel ? resolvePath(rel.target, folder) : null;\r\n\t}\r\n\r\n\tprivate loadResource(part: Part, id: string, outputType: OutputType) {\r\n\t\tconst path = this.getPathById(part, id);\r\n\t\treturn path ? this._package.load(path, outputType) : Promise.resolve(null);\r\n\t}\r\n}\r\n\r\nexport function deobfuscate(data: Uint8Array, guidKey: string): Uint8Array {\r\n\tconst len = 16;\r\n\tconst trimmed = guidKey.replace(/{|}|-/g, \"\");\r\n\tconst numbers = new Array(len);\r\n\r\n\tfor (let i = 0; i < len; i++)\r\n\t\tnumbers[len - i - 1] = parseInt(trimmed.substr(i * 2, 2), 16);\r\n\r\n\tfor (let i = 0; i < 32; i++)\r\n\t\tdata[i] = data[i] ^ numbers[i % len]\r\n\r\n\treturn data;\r\n}","module.exports = __WEBPACK_EXTERNAL_MODULE__626__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(667);\n"],"names":["root","factory","exports","module","require","define","amd","globalThis","__WEBPACK_EXTERNAL_MODULE__626__","OpenXmlPackage","constructor","_zip","options","xmlParser","XmlParser","get","path","this","files","startsWith","substr","normalizePath","update","content","file","static","input","JSZip","loadAsync","then","zip","save","type","generateAsync","load","async","Promise","resolve","loadRelationships","relsPath","f","fn","splitPath","txt","parseRelationships","parseXmlDocument","firstElementChild","parseXmlString","trimXmlDeclaration","_package","all","rels","text","xmlDoc","keepOrigin","_xmlDocument","parseXml","serializeXmlString","RelationshipTypes","xml","elements","map","e","id","attr","target","targetMode","autos","shd","color","borderColor","highlight","ignoreWidth","debug","parseNotes","elemName","elemClass","result","el","node","noteType","children","parseBodyElements","push","parseDocumentFile","xbody","element","background","sectPr","DomType","Document","props","parseSectionProperties","cssStyle","parseBackground","elem","xmlUtil","colorAttr","foreach","localName","parseParagraph","parseTable","parseSdt","forEach","parseStylesFile","xstyles","n","parseStyle","parseDefaultStyles","name","basedOn","styles","c","rPr","values","parseDefaultProperties","pPr","isDefault","boolAttr","linked","next","aliases","split","paragraphProps","parseParagraphProperties","runProps","parseRunProperties","s","parseTableStyle","console","warn","selector","modificator","mod","parseNumberingFile","xnums","mapping","bullets","parseAbstractNumbering","x","parseNumberingPicBullet","numId","abstractNumId","elementAttr","pict","shape","imagedata","intAttr","src","style","parseNumberingLevel","level","pStyleName","undefined","pStyle","rStyle","suff","bullet","find","levelText","format","sdtContent","Paragraph","parseRun","parseHyperlink","parseBookmarkStart","parseBookmarkEnd","parseMath","paragraph","parseParagraphProperty","styleName","className","classNameOfCnfStyle","parseFrame","parent","Hyperlink","anchor","relId","href","Run","Text","textContent","SimpleField","instruction","lock","dirty","fieldRun","Instruction","ComplexField","charType","NoBreakHyphen","Break","break","Symbol","font","char","Tab","FootnoteReference","EndnoteReference","d","parseDrawing","parseVmlPicture","parseMathElement","MmlMath","MmlFraction","MmlNumerator","MmlDenominator","run","log","verticalAlign","valueOfVertAlign","VmlPicture","parseVmlShape","VmlShape","cssStyleText","title","parseDrawingWrapper","Drawing","isAnchor","wrapType","simplePos","posX","relative","align","offset","posY","lengthAttr","LengthUsage","Emu","pos","alignNode","offsetNode","sizeValue","g","parseGraphic","graphicData","parsePicture","Image","blipFill","blip","spPr","xfrm","Table","parseTableRow","columns","parseTableColumns","parseTableProperties","width","table","cellStyle","classNameOftblLook","parseTablePosition","colBandSize","rowBandSize","topFromText","bottomFromText","rightFromText","leftFromText","addSize","Row","parseTableCell","parseTableRowProperties","row","isHeader","Cell","parseTableCellProperties","cell","span","verticalMerge","childStyle","handler","letterSpacing","scale","valueOfJc","valueOfTextAlignment","FontSize","valueOfSize","parseTrHeight","parseUnderline","parseIndentation","parseFont","parseBorderProperties","valueOfMargin","valueOfBorder","parseMarginProperties","valueOfTblLayout","parseSpacing","floatAttr","Math","round","ceil","val","col","fonts","themeValue","filter","join","length","firstLine","hanging","left","start","right","end","before","after","line","lineRule","toFixed","output","knownColors","cb","i","childNodes","nodeType","Node","ELEMENT_NODE","attrName","defValue","autoColor","v","includes","themeColor","Dxa","convertLength","Percent","Border","_","asTagName","a","b","hexAttr","trim","CorePropsPart","Part","parseCoreProps","description","subject","creator","keywords","language","lastModifiedBy","revision","parseInt","CustomPropsPart","parseCustomProps","firstChild","formatId","nodeName","value","ExtendedPropsPart","parseExtendedProps","safeParseToInt","template","pages","words","characters","application","lines","paragraphs","company","appVersion","BookmarkStart","colFirst","colLast","BookmarkEnd","parseBorder","size","Point","frame","shadow","top","bottom","ns","wordml","drawingml","picture","compatibility","mul","unit","LineHeight","usage","test","defaultValue","namespaceURI","fontSize","DocumentPart","pkg","parser","super","_documentParser","body","parseCommonProperty","tabs","parseTabs","sectionProps","numbering","parseNumbering","lineSpacing","parseLineSpacing","textAlignment","keepLines","keepNext","pageBreakBefore","outlineLevel","position","leader","parseRunProperty","parseColumns","numberOfColumns","space","separator","equalWidth","parsePageNumber","chapSep","chapStyle","parseFooterHeaderReference","SectionType","section","pageSize","height","orientation","pageMargins","header","footer","gutter","headerRefs","footerRefs","titlePage","pageBorders","parseBorders","pageNumber","defaultOptions","ignoreHeight","ignoreFonts","breakPages","experimental","inWrapper","ignoreLastRenderedPageBreak","renderHeaders","renderFooters","renderFootnotes","renderEndnotes","useBase64URL","data","userOptions","ops","WordDocument","DocumentParser","bodyContainer","styleContainer","renderer","HtmlRenderer","window","document","doc","render","FontTablePart","parseFonts","embedFontTypeMap","embedRegular","embedBold","embedItalic","embedBoldItalic","embedFontRefs","family","altName","parseEmbedFontRef","key","Header","Footer","BaseHeaderFooterPart","rootElement","createRootElement","WmlHeader","WmlFooter","createElement","tagName","createElementNS","createSvgElement","Object","assign","appendChildren","removeAllElements","innerHTML","appendChild","createStyleElement","cssText","appendComment","comment","createComment","htmlDocument","styleMap","currentPart","tableVerticalMerges","currentVerticalMerge","tableCellPositions","currentCellPosition","footnoteMap","endnoteMap","currentEndnoteIds","usedHederFooterParts","currentTabs","tabsTimeout","renderDefaultStyle","themePart","renderTheme","stylesPart","processStyles","renderStyles","numberingPart","prodessNumberings","domNumberings","renderNumbering","footnotesPart","keyBy","notes","endnotesPart","settingsPart","defaultTabSize","settings","defaultTabStop","fontTablePart","renderFontTable","sectionElements","renderSections","documentPart","renderWrapper","refreshTabStops","variables","fontScheme","theme","majorFont","latinTypeface","minorFont","colorScheme","k","entries","colors","styleToString","fontsPart","ref","loadFont","fontData","cssValues","processStyleName","escapeClassName","stylesMap","baseStyle","mergeDeep","baseValues","styleValues","copyStyleProperties","cssName","numberings","num","findStyle","processElement","processTable","r","attrs","getOwnPropertyNames","hasOwnProperty","createSection","paddingLeft","paddingRight","paddingTop","paddingBottom","minHeight","columnCount","columnGap","columnRule","sections","splitBySection","prevProps","l","currentFootnoteIds","sectProps","sectionElement","renderStyleValues","renderHeaderFooter","contentElement","renderElements","renderNotes","refs","page","firstOfSection","into","part","findPartByRelId","isPageBreakElement","current","p","pBreakIndex","rBreakIndex","findIndex","bind","breakRun","splitRun","newParagraph","slice","runChildren","newRun","currentSectProps","styleText","rootCounters","numberingClass","listStyleType","valiable","toLowerCase","loadNumberingImage","counter","numberingCounter","levelTextToContent","numFormatToCssValue","defautStyles","subStyles","linkedStyle","concat","subStyle","noteIds","notesMap","renderElement","renderParagraph","renderBookmarkStart","renderRun","renderTable","renderTableRow","renderTableCell","renderHyperlink","renderDrawing","renderImage","renderText","renderTab","renderSymbol","renderBreak","renderContainer","Footnote","Endnote","renderFootnoteReference","renderEndnoteReference","renderVmlPicture","renderVmlShape","renderChildren","elems","renderClass","renderCommonProperties","classList","add","renderRunProperties","rel","it","display","textIndent","loadDocumentImage","createTextNode","fontFamily","tabSpan","tabStopClass","stops","findParent","wrapper","renderTableColumns","pop","colElem","rowSpan","colSpan","setTimeout","bb","getBBox","setAttribute","image","ouput","lvl","selectors","numformat","replace","substring","clearTimeout","pixelToPoint","computePixelToPoint","tab","updateTabStop","defaultTab","lengthToPoint","parseFloat","container","temp","offsetWidth","removeChild","closest","ebb","getBoundingClientRect","pbb","pcs","getComputedStyle","tabStops","t","sort","lastTab","pWidthPt","marginLeft","pOffset","Array","from","querySelectorAll","nextIdx","indexOf","range","createRange","setStart","setEndBefore","setEndAfter","nextBB","textDecoration","wordSpacing","textDecorationStyle","WmlBaseNote","BaseNotePart","WmlFootnote","WmlEndnote","NumberingPart","parseNumberingPart","overrides","abstractId","parseNumberingLevelOverrride","levels","multiLevelType","numberingStyleLink","styleLink","restart","justification","bulletPictureId","paragraphStyle","numberingLevel","parseNumberingBulletPicture","referenceId","abstractNumberings","bulletPictures","xmlString","DOMParser","parseFromString","errorText","getElementsByTagName","Error","XMLSerializer","serializeToString","item","attrLocalName","attributes","convertBoolean","globalXmlParser","SettingsPart","parseSettings","parseNoteProperties","defaultNoteIds","nummeringFormat","footnoteProps","endnoteProps","autoHyphenation","StylesPart","ThemePart","parseTheme","DmlTheme","parseColorScheme","srgbClr","sysClr","parseFontScheme","parseFontInfo","eaTypeface","csTypeface","themeElements","isObject","isArray","si","lastIndexOf","base","prefix","URL","toString","array","by","reduce","blob","reader","FileReader","onloadend","readAsDataURL","sources","source","shift","topLevelRels","OfficeDocument","ExtendedProperties","CoreProperties","CustomProperties","parts","partsMap","_options","_parser","tasks","loadRelationshipPart","FontTable","Numbering","Styles","Theme","Footnotes","FootnotesPart","Endnotes","EndnotesPart","FooterPart","HeaderPart","corePropsPart","extendedPropsPart","Settings","folder","resolvePath","loadResource","blobToURL","Blob","deobfuscate","blobToBase64","createObjectURL","basePart","getPathById","outputType","guidKey","trimmed","numbers","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}